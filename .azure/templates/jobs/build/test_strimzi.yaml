jobs:
  - job: 'test_strimzi'
    displayName: 'Test Strimzi'
    # Strategy for the job
    strategy:
      matrix:
        'java-11':
          jdk_version: '11'
          jdk_path: '/usr/lib/jvm/java-11-openjdk-amd64'
          main_build: 'true'
    # Set timeout for jobs
    timeoutInMinutes: 60
    # Base system
    pool:
      vmImage: Ubuntu-20.04
    # Pipeline steps
    steps:
      # Get cached files
      - task: Cache@2
        inputs:
          key: 'mvn-m2-cache | $(System.JobName)'
          path: $(HOME)/.m2/repository
        displayName: Maven cache
      - task: Cache@2
        inputs:
          key: '"kafka-binaries" | kafka-versions.yaml'
          path: docker-images/artifacts/binaries/kafka/archives

      # Install Prerequisites
      - template: "../../steps/prerequisites/install_yq.yaml"
      - template: '../../steps/prerequisites/install_docker.yaml'
      - template: '../../steps/prerequisites/install_minikube.yaml'
      - template: '../../steps/prerequisites/install_java.yaml'
        parameters:
          JDK_PATH: $(jdk_path)
          JDK_VERSION: $(jdk_version)

      # Download the binaries (to avoid downloading Kafka again etc.)
      - task: DownloadPipelineArtifact@2
        inputs:
          source: '${{ parameters.artifactSource }}'
          artifact: Binaries
          path: $(System.DefaultWorkingDirectory)/
          project: '${{ parameters.artifactProject }}'
          pipeline: '${{ parameters.artifactPipeline }}'
          runVersion: '${{ parameters.artifactRunVersion }}'
          runId: '${{ parameters.artifactRunId }}'
      - bash: tar -xvf binaries.tar
        displayName: "Untar the binaries"

      # Run the unit and integration tests
      - bash: "make java_install"
        displayName: "Unit and Integration tests"
        env:
          MVN_ARGS: "-e -V -B"

      # Publish test results
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: "Unit & Integration tests"
        condition: always()
