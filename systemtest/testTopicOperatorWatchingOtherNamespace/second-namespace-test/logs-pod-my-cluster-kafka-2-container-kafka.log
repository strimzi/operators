++ hostname
++ awk -F- '{print $NF}'
+ STRIMZI_BROKER_ID=2
STRIMZI_BROKER_ID=2
+ export STRIMZI_BROKER_ID
+ echo STRIMZI_BROKER_ID=2
+ export GC_LOG_ENABLED=false
+ GC_LOG_ENABLED=false
+ '[' -z '' ']'
+ export KAFKA_LOG4J_OPTS=-Dlog4j.configuration=file:/opt/kafka/custom-config/log4j.properties
+ KAFKA_LOG4J_OPTS=-Dlog4j.configuration=file:/opt/kafka/custom-config/log4j.properties
+ rm -f /var/opt/kafka/kafka-ready /var/opt/kafka/zk-connected
++ ls /opt/kafka/libs/kafka-agent-0.26.0-SNAPSHOT.jar
+ KAFKA_OPTS=' -javaagent:/opt/kafka/libs/kafka-agent-0.26.0-SNAPSHOT.jar=/var/opt/kafka/kafka-ready:/var/opt/kafka/zk-connected'
+ export KAFKA_OPTS
+ . ./set_kafka_jmx_options.sh '' '' ''
++ set -e
++ JMX_ENABLED=
++ JMX_USERNAME=
++ JMX_PASSWORD=
++ '[' '' = true ']'
+ '[' -n '' ']'
+ '[' false = true ']'
+ export LOG_DIR=/opt/kafka
+ LOG_DIR=/opt/kafka
++ tr -dc _A-Z-a-z-0-9
++ head -c32
+ CERTS_STORE_PASSWORD=1JnfoS7dKao-njzLr_6yDQPCKoyuJo0c
+ export CERTS_STORE_PASSWORD
+ mkdir -p /tmp/kafka
+ ./kafka_tls_prepare_certificates.sh
Preparing truststore for replication listener
Adding /opt/kafka/cluster-ca-certs/ca.crt to truststore /tmp/kafka/cluster.truststore.p12 with alias ca
Certificate was added to keystore
Preparing truststore for replication listener is complete
Looking for the right CA
Found the right CA: /opt/kafka/cluster-ca-certs/ca.crt
Preparing keystore for replication and clienttls listener
Preparing keystore for replication and clienttls listener is complete
Preparing truststore for client authentication
Adding /opt/kafka/client-ca-certs/ca.crt to truststore /tmp/kafka/clients.truststore.p12 with alias ca
Certificate was added to keystore
Preparing truststore for client authentication is complete
Starting Kafka with configuration:
+ echo 'Starting Kafka with configuration:'
+ ./kafka_config_generator.sh
+ tee /tmp/strimzi.properties
+ sed -e 's/sasl.jaas.config=.*/sasl.jaas.config=[hidden]/g' -e 's/password=.*/password=[hidden]/g'
##############################
##############################
# This file is automatically generated by the Strimzi Cluster Operator
# Any changes to this file will be ignored and overwritten!
##############################
##############################

##########
# Broker ID
##########
broker.id=2

##########
# Zookeeper
##########
zookeeper.connect=my-cluster-zookeeper-client:2181
zookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty
zookeeper.ssl.client.enable=true
zookeeper.ssl.keystore.location=/tmp/kafka/cluster.keystore.p12
zookeeper.ssl.keystore.password=[hidden]
zookeeper.ssl.keystore.type=PKCS12
zookeeper.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12
zookeeper.ssl.truststore.password=[hidden]
zookeeper.ssl.truststore.type=PKCS12

##########
# Kafka message logs configuration
##########
log.dirs=/var/lib/kafka/data/kafka-log2

##########
# Control Plane listener
##########
listener.name.controlplane-9090.ssl.keystore.location=/tmp/kafka/cluster.keystore.p12
listener.name.controlplane-9090.ssl.keystore.password=[hidden]
listener.name.controlplane-9090.ssl.keystore.type=PKCS12
listener.name.controlplane-9090.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12
listener.name.controlplane-9090.ssl.truststore.password=[hidden]
listener.name.controlplane-9090.ssl.truststore.type=PKCS12
listener.name.controlplane-9090.ssl.client.auth=required

##########
# Replication listener
##########
listener.name.replication-9091.ssl.keystore.location=/tmp/kafka/cluster.keystore.p12
listener.name.replication-9091.ssl.keystore.password=[hidden]
listener.name.replication-9091.ssl.keystore.type=PKCS12
listener.name.replication-9091.ssl.truststore.location=/tmp/kafka/cluster.truststore.p12
listener.name.replication-9091.ssl.truststore.password=[hidden]
listener.name.replication-9091.ssl.truststore.type=PKCS12
listener.name.replication-9091.ssl.client.auth=required

##########
# Listener configuration: PLAIN-9092
##########

##########
# Listener configuration: TLS-9093
##########
listener.name.tls-9093.ssl.keystore.location=/tmp/kafka/cluster.keystore.p12
listener.name.tls-9093.ssl.keystore.password=[hidden]
listener.name.tls-9093.ssl.keystore.type=PKCS12


##########
# Common listener configuration
##########
listeners=CONTROLPLANE-9090://0.0.0.0:9090,REPLICATION-9091://0.0.0.0:9091,PLAIN-9092://0.0.0.0:9092,TLS-9093://0.0.0.0:9093
advertised.listeners=CONTROLPLANE-9090://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9090,REPLICATION-9091://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091,PLAIN-9092://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9092,TLS-9093://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9093
listener.security.protocol.map=CONTROLPLANE-9090:SSL,REPLICATION-9091:SSL,PLAIN-9092:PLAINTEXT,TLS-9093:SSL
inter.broker.listener.name=REPLICATION-9091
sasl.enabled.mechanisms=
ssl.secure.random.implementation=SHA1PRNG
ssl.endpoint.identification.algorithm=HTTPS

##########
# User provided configuration
##########
inter.broker.protocol.version=2.8
log.message.format.version=2.8
offsets.topic.replication.factor=3
transaction.state.log.min.isr=2
transaction.state.log.replication.factor=3
+ echo ''
+ '[' -z -Xms128M ']'
+ . ./set_kafka_gc_options.sh
++ set -e
++ '[' false == true ']'
++ export 'KAFKA_GC_LOG_OPTS= '
++ KAFKA_GC_LOG_OPTS=' '
++ export GC_LOG_ENABLED=false
++ GC_LOG_ENABLED=false
+ exec /usr/bin/tini -w -e 143 -- /opt/kafka/bin/kafka-server-start.sh /tmp/strimzi.properties
2021-08-26 13:33:44,665 INFO Starting KafkaAgent with brokerReadyFile=/var/opt/kafka/kafka-ready and sessionConnectedFile=/var/opt/kafka/zk-connected (io.strimzi.kafka.agent.KafkaAgent) [main]
2021-08-26 13:33:44,666 INFO Starting metrics registry (io.strimzi.kafka.agent.KafkaAgent) [main]
2021-08-26 13:33:44,961 INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$) [main]
2021-08-26 13:33:45,461 INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util) [main]
2021-08-26 13:33:45,551 DEBUG Metric kafka.server:type=KafkaServer,name=BrokerState added  (io.strimzi.kafka.agent.KafkaAgent) [main]
2021-08-26 13:33:45,583 INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler) [main]
2021-08-26 13:33:45,590 INFO starting (kafka.server.KafkaServer) [main]
2021-08-26 13:33:45,590 INFO Connecting to zookeeper on my-cluster-zookeeper-client:2181 (kafka.server.KafkaServer) [main]
2021-08-26 13:33:45,620 INFO [ZooKeeperClient Kafka server] Initializing a new session to my-cluster-zookeeper-client:2181. (kafka.zookeeper.ZooKeeperClient) [main]
2021-08-26 13:33:45,628 INFO Client environment:zookeeper.version=3.5.9-83df9301aa5c2a5d284a9940177808c01bc35cef, built on 01/06/2021 20:03 GMT (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:host.name=my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc.cluster.local (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:java.version=11.0.12 (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:java.vendor=Red Hat, Inc. (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:java.home=/usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.el8_4.x86_64 (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:java.class.path=/opt/kafka/bin/../libs/accessors-smart-2.4.7.jar:/opt/kafka/bin/../libs/activation-1.1.1.jar:/opt/kafka/bin/../libs/annotations-13.0.jar:/opt/kafka/bin/../libs/aopalliance-repackaged-2.6.1.jar:/opt/kafka/bin/../libs/argparse4j-0.7.0.jar:/opt/kafka/bin/../libs/audience-annotations-0.5.0.jar:/opt/kafka/bin/../libs/automaton-1.11-8.jar:/opt/kafka/bin/../libs/checker-qual-3.5.0.jar:/opt/kafka/bin/../libs/commons-cli-1.4.jar:/opt/kafka/bin/../libs/commons-lang-2.6.jar:/opt/kafka/bin/../libs/commons-lang3-3.8.1.jar:/opt/kafka/bin/../libs/commons-math3-3.6.1.jar:/opt/kafka/bin/../libs/connect-api-2.8.0.jar:/opt/kafka/bin/../libs/connect-basic-auth-extension-2.8.0.jar:/opt/kafka/bin/../libs/connect-file-2.8.0.jar:/opt/kafka/bin/../libs/connect-json-2.8.0.jar:/opt/kafka/bin/../libs/connect-mirror-2.8.0.jar:/opt/kafka/bin/../libs/connect-mirror-client-2.8.0.jar:/opt/kafka/bin/../libs/connect-runtime-2.8.0.jar:/opt/kafka/bin/../libs/connect-transforms-2.8.0.jar:/opt/kafka/bin/../libs/cruise-control-metrics-reporter-2.5.57.jar:/opt/kafka/bin/../libs/error_prone_annotations-2.3.4.jar:/opt/kafka/bin/../libs/failureaccess-1.0.1.jar:/opt/kafka/bin/../libs/generex-1.0.2.jar:/opt/kafka/bin/../libs/gson-2.8.6.jar:/opt/kafka/bin/../libs/guava-30.1-jre.jar:/opt/kafka/bin/../libs/hamcrest-core-1.3.jar:/opt/kafka/bin/../libs/hk2-api-2.6.1.jar:/opt/kafka/bin/../libs/hk2-locator-2.6.1.jar:/opt/kafka/bin/../libs/hk2-utils-2.6.1.jar:/opt/kafka/bin/../libs/j2objc-annotations-1.3.jar:/opt/kafka/bin/../libs/jackson-annotations-2.10.5.jar:/opt/kafka/bin/../libs/jackson-core-2.10.5.jar:/opt/kafka/bin/../libs/jackson-databind-2.10.5.1.jar:/opt/kafka/bin/../libs/jackson-dataformat-csv-2.10.5.jar:/opt/kafka/bin/../libs/jackson-dataformat-yaml-2.11.2.jar:/opt/kafka/bin/../libs/jackson-datatype-jdk8-2.10.5.jar:/opt/kafka/bin/../libs/jackson-datatype-jsr310-2.11.2.jar:/opt/kafka/bin/../libs/jackson-jaxrs-base-2.10.5.jar:/opt/kafka/bin/../libs/jackson-jaxrs-json-provider-2.10.5.jar:/opt/kafka/bin/../libs/jackson-module-jaxb-annotations-2.10.5.jar:/opt/kafka/bin/../libs/jackson-module-paranamer-2.10.5.jar:/opt/kafka/bin/../libs/jackson-module-scala_2.13-2.10.5.jar:/opt/kafka/bin/../libs/jaeger-client-1.6.0.jar:/opt/kafka/bin/../libs/jaeger-core-1.6.0.jar:/opt/kafka/bin/../libs/jaeger-thrift-1.6.0.jar:/opt/kafka/bin/../libs/jaeger-tracerresolver-1.6.0.jar:/opt/kafka/bin/../libs/jakarta.activation-api-1.2.1.jar:/opt/kafka/bin/../libs/jakarta.annotation-api-1.3.5.jar:/opt/kafka/bin/../libs/jakarta.inject-2.6.1.jar:/opt/kafka/bin/../libs/jakarta.validation-api-2.0.2.jar:/opt/kafka/bin/../libs/jakarta.ws.rs-api-2.1.6.jar:/opt/kafka/bin/../libs/jakarta.xml.bind-api-2.3.2.jar:/opt/kafka/bin/../libs/javassist-3.27.0-GA.jar:/opt/kafka/bin/../libs/javax.servlet-api-3.1.0.jar:/opt/kafka/bin/../libs/javax.ws.rs-api-2.1.1.jar:/opt/kafka/bin/../libs/jaxb-api-2.3.0.jar:/opt/kafka/bin/../libs/jersey-client-2.31.jar:/opt/kafka/bin/../libs/jersey-common-2.31.jar:/opt/kafka/bin/../libs/jersey-container-servlet-2.31.jar:/opt/kafka/bin/../libs/jersey-container-servlet-core-2.31.jar:/opt/kafka/bin/../libs/jersey-hk2-2.31.jar:/opt/kafka/bin/../libs/jersey-media-jaxb-2.31.jar:/opt/kafka/bin/../libs/jersey-server-2.31.jar:/opt/kafka/bin/../libs/jetty-client-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-continuation-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-http-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-io-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-security-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-server-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-servlet-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-servlets-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-util-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jetty-util-ajax-9.4.39.v20210325.jar:/opt/kafka/bin/../libs/jline-3.12.1.jar:/opt/kafka/bin/../libs/jmx_prometheus_javaagent-0.16.1.jar:/opt/kafka/bin/../libs/jopt-simple-5.0.4.jar:/opt/kafka/bin/../libs/json-path-2.6.0.jar:/opt/kafka/bin/../libs/json-smart-2.4.7.jar:/opt/kafka/bin/../libs/jsonevent-layout-1.7.jar:/opt/kafka/bin/../libs/jsr305-3.0.2.jar:/opt/kafka/bin/../libs/junit-4.13.2.jar:/opt/kafka/bin/../libs/kafka-agent-0.26.0-SNAPSHOT.jar:/opt/kafka/bin/../libs/kafka-clients-2.8.0.jar:/opt/kafka/bin/../libs/kafka-env-var-config-provider-0.1.0.jar:/opt/kafka/bin/../libs/kafka-kubernetes-config-provider-0.1.0.jar:/opt/kafka/bin/../libs/kafka-log4j-appender-2.8.0.jar:/opt/kafka/bin/../libs/kafka-metadata-2.8.0.jar:/opt/kafka/bin/../libs/kafka-oauth-client-0.8.1.jar:/opt/kafka/bin/../libs/kafka-oauth-common-0.8.1.jar:/opt/kafka/bin/../libs/kafka-oauth-keycloak-authorizer-0.8.1.jar:/opt/kafka/bin/../libs/kafka-oauth-server-0.8.1.jar:/opt/kafka/bin/../libs/kafka-oauth-server-plain-0.8.1.jar:/opt/kafka/bin/../libs/kafka-quotas-plugin-0.1.0.jar:/opt/kafka/bin/../libs/kafka-raft-2.8.0.jar:/opt/kafka/bin/../libs/kafka-shell-2.8.0.jar:/opt/kafka/bin/../libs/kafka-streams-2.8.0.jar:/opt/kafka/bin/../libs/kafka-streams-examples-2.8.0.jar:/opt/kafka/bin/../libs/kafka-streams-scala_2.13-2.8.0.jar:/opt/kafka/bin/../libs/kafka-streams-test-utils-2.8.0.jar:/opt/kafka/bin/../libs/kafka-tools-2.8.0.jar:/opt/kafka/bin/../libs/kafka_2.13-2.8.0-sources.jar:/opt/kafka/bin/../libs/kafka_2.13-2.8.0.jar:/opt/kafka/bin/../libs/kotlin-stdlib-1.4.10.jar:/opt/kafka/bin/../libs/kotlin-stdlib-common-1.4.0.jar:/opt/kafka/bin/../libs/kubernetes-client-5.4.0.jar:/opt/kafka/bin/../libs/kubernetes-model-core-5.4.0.jar:/opt/kafka/bin/../libs/libthrift-0.14.1.jar:/opt/kafka/bin/../libs/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/kafka/bin/../libs/log4j-1.2.17.jar:/opt/kafka/bin/../libs/logging-interceptor-3.12.12.jar:/opt/kafka/bin/../libs/lz4-java-1.7.1.jar:/opt/kafka/bin/../libs/maven-artifact-3.6.3.jar:/opt/kafka/bin/../libs/metrics-core-2.2.0.jar:/opt/kafka/bin/../libs/mirror-maker-2-extensions-1.0.0.jar:/opt/kafka/bin/../libs/mirror-maker-agent-0.26.0-SNAPSHOT.jar:/opt/kafka/bin/../libs/netty-buffer-4.1.62.Final.jar:/opt/kafka/bin/../libs/netty-codec-4.1.62.Final.jar:/opt/kafka/bin/../libs/netty-common-4.1.62.Final.jar:/opt/kafka/bin/../libs/netty-handler-4.1.62.Final.jar:/opt/kafka/bin/../libs/netty-resolver-4.1.62.Final.jar:/opt/kafka/bin/../libs/netty-transport-4.1.62.Final.jar:/opt/kafka/bin/../libs/netty-transport-native-epoll-4.1.62.Final.jar:/opt/kafka/bin/../libs/netty-transport-native-unix-common-4.1.62.Final.jar:/opt/kafka/bin/../libs/nimbus-jose-jwt-9.10.jar:/opt/kafka/bin/../libs/okhttp-4.9.0.jar:/opt/kafka/bin/../libs/okio-2.8.0.jar:/opt/kafka/bin/../libs/opa-authorizer-1.1.0.jar:/opt/kafka/bin/../libs/opentracing-api-0.33.0.jar:/opt/kafka/bin/../libs/opentracing-kafka-client-0.1.15.jar:/opt/kafka/bin/../libs/opentracing-noop-0.33.0.jar:/opt/kafka/bin/../libs/opentracing-tracerresolver-0.1.8.jar:/opt/kafka/bin/../libs/opentracing-util-0.33.0.jar:/opt/kafka/bin/../libs/osgi-resource-locator-1.0.3.jar:/opt/kafka/bin/../libs/paranamer-2.8.jar:/opt/kafka/bin/../libs/plexus-utils-3.2.1.jar:/opt/kafka/bin/../libs/reflections-0.9.12.jar:/opt/kafka/bin/../libs/rocksdbjni-5.18.4.jar:/opt/kafka/bin/../libs/scala-collection-compat_2.13-2.3.0.jar:/opt/kafka/bin/../libs/scala-java8-compat_2.13-0.9.1.jar:/opt/kafka/bin/../libs/scala-library-2.13.5.jar:/opt/kafka/bin/../libs/scala-logging_2.13-3.9.2.jar:/opt/kafka/bin/../libs/scala-reflect-2.13.5.jar:/opt/kafka/bin/../libs/slf4j-api-1.7.30.jar:/opt/kafka/bin/../libs/slf4j-log4j12-1.7.30.jar:/opt/kafka/bin/../libs/snakeyaml-1.26.jar:/opt/kafka/bin/../libs/snappy-java-1.1.8.1.jar:/opt/kafka/bin/../libs/tracing-agent-0.26.0-SNAPSHOT.jar:/opt/kafka/bin/../libs/zjsonpatch-0.3.0.jar:/opt/kafka/bin/../libs/zookeeper-3.5.9.jar:/opt/kafka/bin/../libs/zookeeper-jute-3.5.9.jar:/opt/kafka/bin/../libs/zstd-jni-1.4.9-1.jar (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:os.version=4.18.0-305.10.2.el8_4.x86_64 (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:user.name=1000740000 (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:user.home=/ (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:user.dir=/opt/kafka (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,628 INFO Client environment:os.memory.free=266MB (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,629 INFO Client environment:os.memory.max=3750MB (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,629 INFO Client environment:os.memory.total=277MB (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,631 INFO Initiating client connection, connectString=my-cluster-zookeeper-client:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@1c39680d (org.apache.zookeeper.ZooKeeper) [main]
2021-08-26 13:33:45,641 DEBUG Using SLF4J as the default logging framework (io.netty.util.internal.logging.InternalLoggerFactory) [main]
2021-08-26 13:33:45,665 DEBUG -Dio.netty.noUnsafe: false (io.netty.util.internal.PlatformDependent0) [main]
2021-08-26 13:33:45,665 DEBUG Java version: 11 (io.netty.util.internal.PlatformDependent0) [main]
2021-08-26 13:33:45,667 DEBUG sun.misc.Unsafe.theUnsafe: available (io.netty.util.internal.PlatformDependent0) [main]
2021-08-26 13:33:45,668 DEBUG sun.misc.Unsafe.copyMemory: available (io.netty.util.internal.PlatformDependent0) [main]
2021-08-26 13:33:45,668 DEBUG java.nio.Buffer.address: available (io.netty.util.internal.PlatformDependent0) [main]
2021-08-26 13:33:45,669 DEBUG direct buffer constructor: unavailable (io.netty.util.internal.PlatformDependent0) [main]
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:239)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:233)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:93)
	at io.netty.channel.epoll.Native.loadNativeLibrary(Native.java:287)
	at io.netty.channel.epoll.Native.<clinit>(Native.java:70)
	at io.netty.channel.epoll.Epoll.<clinit>(Epoll.java:39)
	at org.apache.zookeeper.common.NettyUtils.newNioOrEpollEventLoopGroup(NettyUtils.java:75)
	at org.apache.zookeeper.ClientCnxnSocketNetty.<init>(ClientCnxnSocketNetty.java:89)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.zookeeper.ZooKeeper.getClientCnxnSocket(ZooKeeper.java:3064)
	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:883)
	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:1010)
	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:738)
	at kafka.zookeeper.ZooKeeperClient.<init>(ZooKeeperClient.scala:117)
	at kafka.zk.KafkaZkClient$.apply(KafkaZkClient.scala:1948)
	at kafka.server.KafkaServer.createZkClient$1(KafkaServer.scala:431)
	at kafka.server.KafkaServer.initZkClient(KafkaServer.scala:456)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:191)
	at kafka.Kafka$.main(Kafka.scala:109)
	at kafka.Kafka.main(Kafka.scala)
2021-08-26 13:33:45,675 DEBUG java.nio.Bits.unaligned: available, true (io.netty.util.internal.PlatformDependent0) [main]
2021-08-26 13:33:45,676 DEBUG jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable (io.netty.util.internal.PlatformDependent0) [main]
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @5965be2d
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
	at java.base/java.lang.reflect.Method.invoke(Method.java:558)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:353)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:344)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:93)
	at io.netty.channel.epoll.Native.loadNativeLibrary(Native.java:287)
	at io.netty.channel.epoll.Native.<clinit>(Native.java:70)
	at io.netty.channel.epoll.Epoll.<clinit>(Epoll.java:39)
	at org.apache.zookeeper.common.NettyUtils.newNioOrEpollEventLoopGroup(NettyUtils.java:75)
	at org.apache.zookeeper.ClientCnxnSocketNetty.<init>(ClientCnxnSocketNetty.java:89)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.zookeeper.ZooKeeper.getClientCnxnSocket(ZooKeeper.java:3064)
	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:883)
	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:1010)
	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:738)
	at kafka.zookeeper.ZooKeeperClient.<init>(ZooKeeperClient.scala:117)
	at kafka.zk.KafkaZkClient$.apply(KafkaZkClient.scala:1948)
	at kafka.server.KafkaServer.createZkClient$1(KafkaServer.scala:431)
	at kafka.server.KafkaServer.initZkClient(KafkaServer.scala:456)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:191)
	at kafka.Kafka$.main(Kafka.scala:109)
	at kafka.Kafka.main(Kafka.scala)
2021-08-26 13:33:45,678 DEBUG java.nio.DirectByteBuffer.<init>(long, int): unavailable (io.netty.util.internal.PlatformDependent0) [main]
2021-08-26 13:33:45,679 DEBUG sun.misc.Unsafe: available (io.netty.util.internal.PlatformDependent) [main]
2021-08-26 13:33:45,682 DEBUG maxDirectMemory: 3932160000 bytes (maybe) (io.netty.util.internal.PlatformDependent) [main]
2021-08-26 13:33:45,682 DEBUG -Dio.netty.tmpdir: /tmp (java.io.tmpdir) (io.netty.util.internal.PlatformDependent) [main]
2021-08-26 13:33:45,683 DEBUG -Dio.netty.bitMode: 64 (sun.arch.data.model) (io.netty.util.internal.PlatformDependent) [main]
2021-08-26 13:33:45,684 DEBUG -Dio.netty.maxDirectMemory: -1 bytes (io.netty.util.internal.PlatformDependent) [main]
2021-08-26 13:33:45,684 DEBUG -Dio.netty.uninitializedArrayAllocationThreshold: -1 (io.netty.util.internal.PlatformDependent) [main]
2021-08-26 13:33:45,685 DEBUG java.nio.ByteBuffer.cleaner(): available (io.netty.util.internal.CleanerJava9) [main]
2021-08-26 13:33:45,685 DEBUG -Dio.netty.noPreferDirect: false (io.netty.util.internal.PlatformDependent) [main]
2021-08-26 13:33:45,688 DEBUG -Dio.netty.native.workdir: /tmp (io.netty.tmpdir) (io.netty.util.internal.NativeLibraryLoader) [main]
2021-08-26 13:33:45,688 DEBUG -Dio.netty.native.deleteLibAfterLoading: true (io.netty.util.internal.NativeLibraryLoader) [main]
2021-08-26 13:33:45,688 DEBUG -Dio.netty.native.tryPatchShadedId: true (io.netty.util.internal.NativeLibraryLoader) [main]
2021-08-26 13:33:45,698 DEBUG -Dio.netty.eventLoopThreads: 2 (io.netty.channel.MultithreadEventLoopGroup) [main]
2021-08-26 13:33:45,715 DEBUG -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 (io.netty.util.internal.InternalThreadLocalMap) [main]
2021-08-26 13:33:45,716 DEBUG -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 (io.netty.util.internal.InternalThreadLocalMap) [main]
2021-08-26 13:33:45,723 DEBUG -Dio.netty.noKeySetOptimization: false (io.netty.channel.nio.NioEventLoop) [main]
2021-08-26 13:33:45,723 DEBUG -Dio.netty.selectorAutoRebuildThreshold: 512 (io.netty.channel.nio.NioEventLoop) [main]
2021-08-26 13:33:45,730 DEBUG org.jctools-core.MpscChunkedArrayQueue: available (io.netty.util.internal.PlatformDependent) [main]
2021-08-26 13:33:45,735 INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket) [main]
2021-08-26 13:33:45,742 INFO zookeeper.request.timeout value is 0. feature enabled= (org.apache.zookeeper.ClientCnxn) [main]
2021-08-26 13:33:45,745 INFO Starting poller (io.strimzi.kafka.agent.KafkaAgent) [main]
2021-08-26 13:33:45,746 DEBUG Metric kafka.server:type=SessionExpireListener,name=SessionState = CONNECTING (io.strimzi.kafka.agent.KafkaAgent) [KafkaAgentPoller]
2021-08-26 13:33:45,748 INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient) [main]
2021-08-26 13:33:45,773 INFO Opening socket connection to server my-cluster-zookeeper-client/172.30.99.195:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,845 DEBUG -Dio.netty.processId: 64 (auto-detected) (io.netty.channel.DefaultChannelId) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,850 DEBUG -Djava.net.preferIPv4Stack: false (io.netty.util.NetUtil) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,850 DEBUG -Djava.net.preferIPv6Addresses: false (io.netty.util.NetUtil) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,853 DEBUG Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo) (io.netty.util.NetUtilInitializations) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,855 DEBUG /proc/sys/net/core/somaxconn: 128 (io.netty.util.NetUtil) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,858 DEBUG -Dio.netty.machineId: 0a:58:0a:ff:fe:81:03:c4 (auto-detected) (io.netty.channel.DefaultChannelId) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,874 DEBUG -Dio.netty.leakDetection.level: simple (io.netty.util.ResourceLeakDetector) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,874 DEBUG -Dio.netty.leakDetection.targetRecords: 4 (io.netty.util.ResourceLeakDetector) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.numHeapArenas: 2 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.numDirectArenas: 2 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.pageSize: 8192 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.maxOrder: 11 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.chunkSize: 16777216 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.smallCacheSize: 256 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.normalCacheSize: 64 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.maxCachedBufferCapacity: 32768 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.cacheTrimInterval: 8192 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,901 DEBUG -Dio.netty.allocator.cacheTrimIntervalMillis: 0 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,902 DEBUG -Dio.netty.allocator.useCacheForAllThreads: true (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,902 DEBUG -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 (io.netty.buffer.PooledByteBufAllocator) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,911 DEBUG -Dio.netty.allocator.type: pooled (io.netty.buffer.ByteBufUtil) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,912 DEBUG -Dio.netty.threadLocalDirectBufferSize: 0 (io.netty.buffer.ByteBufUtil) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:45,912 DEBUG -Dio.netty.maxThreadLocalCharBufferSize: 16384 (io.netty.buffer.ByteBufUtil) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:46,482 INFO SSL handler added for channel: [id: 0x14818391] (org.apache.zookeeper.ClientCnxnSocketNetty) [nioEventLoopGroup-2-1]
2021-08-26 13:33:46,515 INFO Socket connection established, initiating session, client: /10.129.3.196:35574, server: my-cluster-zookeeper-client/172.30.99.195:2181 (org.apache.zookeeper.ClientCnxn) [nioEventLoopGroup-2-1]
2021-08-26 13:33:46,517 INFO channel is connected: [id: 0x14818391, L:/10.129.3.196:35574 - R:my-cluster-zookeeper-client/172.30.99.195:2181] (org.apache.zookeeper.ClientCnxnSocketNetty) [nioEventLoopGroup-2-1]
2021-08-26 13:33:46,530 DEBUG -Dio.netty.buffer.checkAccessible: true (io.netty.buffer.AbstractByteBuf) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:46,530 DEBUG -Dio.netty.buffer.checkBounds: true (io.netty.buffer.AbstractByteBuf) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:46,531 DEBUG Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@406a8fa7 (io.netty.util.ResourceLeakDetectorFactory) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:46,536 DEBUG -Dio.netty.recycler.maxCapacityPerThread: 4096 (io.netty.util.Recycler) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:46,536 DEBUG -Dio.netty.recycler.maxSharedCapacityFactor: 2 (io.netty.util.Recycler) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:46,536 DEBUG -Dio.netty.recycler.linkCapacity: 16 (io.netty.util.Recycler) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:46,536 DEBUG -Dio.netty.recycler.ratio: 8 (io.netty.util.Recycler) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:46,536 DEBUG -Dio.netty.recycler.delayedQueue.ratio: 8 (io.netty.util.Recycler) [main-SendThread(my-cluster-zookeeper-client:2181)]
2021-08-26 13:33:47,190 DEBUG [id: 0x14818391, L:/10.129.3.196:35574 - R:my-cluster-zookeeper-client/172.30.99.195:2181] HANDSHAKEN: protocol:TLSv1.2 cipher suite:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (io.netty.handler.ssl.SslHandler) [nioEventLoopGroup-2-1]
2021-08-26 13:33:47,228 INFO Session establishment complete on server my-cluster-zookeeper-client/172.30.99.195:2181, sessionid = 0x10010e7f9510000, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn) [nioEventLoopGroup-2-1]
2021-08-26 13:33:47,235 INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient) [main]
2021-08-26 13:33:48,100 INFO [feature-zk-node-event-process-thread]: Starting (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread) [feature-zk-node-event-process-thread]
2021-08-26 13:33:48,134 INFO Feature ZK node at path: /feature does not exist (kafka.server.FinalizedFeatureChangeListener) [feature-zk-node-event-process-thread]
2021-08-26 13:33:48,135 INFO Cleared cache (kafka.server.FinalizedFeatureCache) [feature-zk-node-event-process-thread]
2021-08-26 13:33:48,509 INFO Cluster ID = 0IS5hMaVTVCKw61BQfUL4g (kafka.server.KafkaServer) [main]
2021-08-26 13:33:48,514 WARN No meta.properties file under dir /var/lib/kafka/data/kafka-log2/meta.properties (kafka.server.BrokerMetadataCheckpoint) [main]
2021-08-26 13:33:48,588 INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = CONTROLPLANE-9090://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9090,REPLICATION-9091://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091,PLAIN-9092://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9092,TLS-9093://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9093
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = REPLICATION-9091
	inter.broker.protocol.version = 2.8
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = CONTROLPLANE-9090:SSL,REPLICATION-9091:SSL,PLAIN-9092:PLAINTEXT,TLS-9093:SSL
	listeners = CONTROLPLANE-9090://0.0.0.0:9090,REPLICATION-9091://0.0.0.0:9091,PLAIN-9092://0.0.0.0:9092,TLS-9093://0.0.0.0:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data/kafka-log2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.8
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	node.id = -1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = []
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = HTTPS
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = SHA1PRNG
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = org.apache.zookeeper.ClientCnxnSocketNetty
	zookeeper.connect = my-cluster-zookeeper-client:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = true
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = /tmp/kafka/cluster.keystore.p12
	zookeeper.ssl.keystore.password = [hidden]
	zookeeper.ssl.keystore.type = PKCS12
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = /tmp/kafka/cluster.truststore.p12
	zookeeper.ssl.truststore.password = [hidden]
	zookeeper.ssl.truststore.type = PKCS12
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig) [main]
2021-08-26 13:33:48,646 INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = CONTROLPLANE-9090://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9090,REPLICATION-9091://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091,PLAIN-9092://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9092,TLS-9093://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9093
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = REPLICATION-9091
	inter.broker.protocol.version = 2.8
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = CONTROLPLANE-9090:SSL,REPLICATION-9091:SSL,PLAIN-9092:PLAINTEXT,TLS-9093:SSL
	listeners = CONTROLPLANE-9090://0.0.0.0:9090,REPLICATION-9091://0.0.0.0:9091,PLAIN-9092://0.0.0.0:9092,TLS-9093://0.0.0.0:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data/kafka-log2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.8
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	node.id = -1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = []
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = HTTPS
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = SHA1PRNG
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = org.apache.zookeeper.ClientCnxnSocketNetty
	zookeeper.connect = my-cluster-zookeeper-client:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = true
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = /tmp/kafka/cluster.keystore.p12
	zookeeper.ssl.keystore.password = [hidden]
	zookeeper.ssl.keystore.type = PKCS12
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = /tmp/kafka/cluster.truststore.p12
	zookeeper.ssl.truststore.password = [hidden]
	zookeeper.ssl.truststore.type = PKCS12
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig) [main]
2021-08-26 13:33:48,717 INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper) [ThrottledChannelReaper-Fetch]
2021-08-26 13:33:48,724 INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper) [ThrottledChannelReaper-Produce]
2021-08-26 13:33:48,734 INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper) [ThrottledChannelReaper-Request]
2021-08-26 13:33:48,736 INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper) [ThrottledChannelReaper-ControllerMutation]
2021-08-26 13:33:48,765 INFO Log directory /var/lib/kafka/data/kafka-log2 not found, creating it. (kafka.log.LogManager) [main]
2021-08-26 13:33:48,834 INFO Loading logs from log dirs ArraySeq(/var/lib/kafka/data/kafka-log2) (kafka.log.LogManager) [main]
2021-08-26 13:33:48,849 INFO Attempting recovery for all logs in /var/lib/kafka/data/kafka-log2 since no clean shutdown file was found (kafka.log.LogManager) [main]
2021-08-26 13:33:48,881 INFO Loaded 0 logs in 46ms. (kafka.log.LogManager) [main]
2021-08-26 13:33:48,883 INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager) [main]
2021-08-26 13:33:48,901 INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager) [main]
2021-08-26 13:33:48,930 INFO Starting the log cleaner (kafka.log.LogCleaner) [main]
2021-08-26 13:33:49,014 INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner) [kafka-log-cleaner-thread-0]
2021-08-26 13:33:49,534 INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas) [main]
2021-08-26 13:33:49,540 INFO Awaiting socket connections on 0.0.0.0:9090. (kafka.network.Acceptor) [main]
2021-08-26 13:33:49,978 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Created data-plane acceptor and processors for endpoint : ListenerName(CONTROLPLANE-9090) (kafka.network.SocketServer) [main]
2021-08-26 13:33:49,979 INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas) [main]
2021-08-26 13:33:49,979 INFO Awaiting socket connections on 0.0.0.0:9091. (kafka.network.Acceptor) [main]
2021-08-26 13:33:50,856 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Created data-plane acceptor and processors for endpoint : ListenerName(REPLICATION-9091) (kafka.network.SocketServer) [main]
2021-08-26 13:33:50,857 INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas) [main]
2021-08-26 13:33:50,857 INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor) [main]
2021-08-26 13:33:50,891 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Created data-plane acceptor and processors for endpoint : ListenerName(PLAIN-9092) (kafka.network.SocketServer) [main]
2021-08-26 13:33:50,892 INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas) [main]
2021-08-26 13:33:50,892 INFO Awaiting socket connections on 0.0.0.0:9093. (kafka.network.Acceptor) [main]
2021-08-26 13:33:51,073 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Created data-plane acceptor and processors for endpoint : ListenerName(TLS-9093) (kafka.network.SocketServer) [main]
2021-08-26 13:33:51,234 INFO [broker-2-to-controller-send-thread]: Starting (kafka.server.BrokerToControllerRequestThread) [broker-2-to-controller-send-thread]
2021-08-26 13:33:51,269 INFO [ExpirationReaper-2-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper) [ExpirationReaper-2-Produce]
2021-08-26 13:33:51,272 INFO [ExpirationReaper-2-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper) [ExpirationReaper-2-Fetch]
2021-08-26 13:33:51,273 INFO [ExpirationReaper-2-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper) [ExpirationReaper-2-ElectLeader]
2021-08-26 13:33:51,272 INFO [ExpirationReaper-2-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper) [ExpirationReaper-2-DeleteRecords]
2021-08-26 13:33:51,303 INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler) [LogDirFailureHandler]
2021-08-26 13:33:51,372 INFO Creating /brokers/ids/2 (is it secure? false) (kafka.zk.KafkaZkClient) [main]
2021-08-26 13:33:51,440 INFO Stat of the created znode at /brokers/ids/2 is: 4294967338,4294967338,1629984831410,1629984831410,1,0,0,72076182544252928,673,0,4294967338
 (kafka.zk.KafkaZkClient) [main]
2021-08-26 13:33:51,441 INFO Registered broker 2 at path /brokers/ids/2 with addresses: CONTROLPLANE-9090://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9090,REPLICATION-9091://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091,PLAIN-9092://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9092,TLS-9093://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9093, czxid (broker epoch): 4294967338 (kafka.zk.KafkaZkClient) [main]
2021-08-26 13:33:51,602 INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread) [controller-event-thread]
2021-08-26 13:33:51,609 INFO [ExpirationReaper-2-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper) [ExpirationReaper-2-topic]
2021-08-26 13:33:51,618 INFO [ExpirationReaper-2-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper) [ExpirationReaper-2-Heartbeat]
2021-08-26 13:33:51,619 INFO [ExpirationReaper-2-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper) [ExpirationReaper-2-Rebalance]
2021-08-26 13:33:51,644 INFO [GroupCoordinator 2]: Starting up. (kafka.coordinator.group.GroupCoordinator) [main]
2021-08-26 13:33:51,662 INFO [GroupCoordinator 2]: Startup complete. (kafka.coordinator.group.GroupCoordinator) [main]
2021-08-26 13:33:51,694 INFO Successfully created /controller_epoch with initial epoch 0 (kafka.zk.KafkaZkClient) [controller-event-thread]
2021-08-26 13:33:51,745 INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:51,777 INFO [Controller id=2] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:51,800 INFO Feature ZK node created at path: /feature (kafka.server.FinalizedFeatureChangeListener) [main-EventThread]
2021-08-26 13:33:51,866 INFO [ProducerId Manager 2]: Acquired new producerId block (brokerId:2,blockStartProducerId:0,blockEndProducerId:999) by writing to Zk with path version 1 (kafka.coordinator.transaction.ProducerIdManager) [main]
2021-08-26 13:33:51,867 INFO [TransactionCoordinator id=2] Starting up. (kafka.coordinator.transaction.TransactionCoordinator) [main]
2021-08-26 13:33:51,869 INFO Updated cache from existing <empty> to latest FinalizedFeaturesAndEpoch(features=Features{}, epoch=0). (kafka.server.FinalizedFeatureCache) [feature-zk-node-event-process-thread]
2021-08-26 13:33:51,870 INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:51,915 INFO [TransactionCoordinator id=2] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator) [main]
2021-08-26 13:33:51,926 INFO [Transaction Marker Channel Manager 2]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager) [TxnMarkerSenderThread-2]
2021-08-26 13:33:51,936 INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:51,985 INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,088 INFO [ExpirationReaper-2-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper) [ExpirationReaper-2-AlterAcls]
2021-08-26 13:33:52,129 INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread) [/config/changes-event-process-thread]
2021-08-26 13:33:52,379 INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,496 INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 4294967338) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,522 DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,558 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Starting socket server acceptors and processors (kafka.network.SocketServer) [main]
2021-08-26 13:33:52,568 DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager) [controller-event-thread]
2021-08-26 13:33:52,575 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Started data-plane acceptor and processor(s) for endpoint : ListenerName(REPLICATION-9091) (kafka.network.SocketServer) [main]
2021-08-26 13:33:52,588 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Started data-plane acceptor and processor(s) for endpoint : ListenerName(TLS-9093) (kafka.network.SocketServer) [main]
2021-08-26 13:33:52,591 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Started data-plane acceptor and processor(s) for endpoint : ListenerName(CONTROLPLANE-9090) (kafka.network.SocketServer) [main]
2021-08-26 13:33:52,593 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Started data-plane acceptor and processor(s) for endpoint : ListenerName(PLAIN-9092) (kafka.network.SocketServer) [main]
2021-08-26 13:33:52,594 INFO [SocketServer listenerType=ZK_BROKER, nodeId=2] Started socket server acceptors and processors (kafka.network.SocketServer) [main]
2021-08-26 13:33:52,609 INFO Kafka version: 2.8.0 (org.apache.kafka.common.utils.AppInfoParser) [main]
2021-08-26 13:33:52,609 INFO Kafka commitId: ebb1d6e21cc92130 (org.apache.kafka.common.utils.AppInfoParser) [main]
2021-08-26 13:33:52,609 INFO Kafka startTimeMs: 1629984832594 (org.apache.kafka.common.utils.AppInfoParser) [main]
2021-08-26 13:33:52,612 INFO [KafkaServer id=2] started (kafka.server.KafkaServer) [main]
2021-08-26 13:33:52,715 INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:33:52,718 INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,718 INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,719 INFO [Controller id=2] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,719 INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,742 INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,742 INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,743 INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,744 INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager) [controller-event-thread]
2021-08-26 13:33:52,745 INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,749 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:33:52,753 DEBUG Exiting thread (io.strimzi.kafka.agent.KafkaAgent) [KafkaAgentPoller]
2021-08-26 13:33:52,761 INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine) [controller-event-thread]
2021-08-26 13:33:52,765 INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine) [controller-event-thread]
2021-08-26 13:33:52,771 INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine) [controller-event-thread]
2021-08-26 13:33:52,772 DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine) [controller-event-thread]
2021-08-26 13:33:52,773 INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine) [controller-event-thread]
2021-08-26 13:33:52,774 INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine) [controller-event-thread]
2021-08-26 13:33:52,806 DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine) [controller-event-thread]
2021-08-26 13:33:52,807 INFO [Controller id=2] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,837 INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,837 INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,838 INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,838 INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,840 INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,889 INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:52,900 INFO [RequestSendThread controllerId=2] Controller 2 connected to my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:33:53,014 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:33:53,022 INFO [broker-2-to-controller-send-thread]: Recorded new controller, from now on will use broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (kafka.server.BrokerToControllerRequestThread) [broker-2-to-controller-send-thread]
2021-08-26 13:33:53,950 INFO [Controller id=2] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:53,951 DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager) [controller-event-thread]
2021-08-26 13:33:54,058 INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:33:54,060 INFO [Controller id=2] New broker startup callback for 0 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:54,061 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:33:54,062 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(0) for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:33:54,066 DEBUG [Controller id=2] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:54,067 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:33:54,084 INFO [Controller id=2] Updated broker epochs cache: HashMap(0 -> 4294967344, 2 -> 4294967338) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:54,643 INFO [RequestSendThread controllerId=2] Controller 2 connected to my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:33:54,737 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:33:57,891 INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:33:57,892 TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:08,292 INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:08,293 DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager) [controller-event-thread]
2021-08-26 13:34:08,379 INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:08,379 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 2) for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:08,380 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:08,381 DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:08,388 INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:34:08,388 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 2 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:34:08,390 INFO [Controller id=2] Updated broker epochs cache: HashMap(0 -> 4294967344, 1 -> 4294967361, 2 -> 4294967338) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:08,395 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:34:08,763 INFO [RequestSendThread controllerId=2] Controller 2 connected to my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:34:08,818 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:34:22,151 INFO Processing notification(s) to /config/changes (kafka.common.ZkNodeChangeNotificationListener) [/config/changes-event-process-thread]
2021-08-26 13:34:22,196 INFO Processing override for entityPath: brokers/0 with config: HashMap() (kafka.server.DynamicConfigManager) [/config/changes-event-process-thread]
2021-08-26 13:34:22,996 INFO Processing notification(s) to /config/changes (kafka.common.ZkNodeChangeNotificationListener) [/config/changes-event-process-thread]
2021-08-26 13:34:23,058 INFO Processing override for entityPath: brokers/1 with config: HashMap() (kafka.server.DynamicConfigManager) [/config/changes-event-process-thread]
2021-08-26 13:34:23,542 INFO [Admin Manager on Broker 2]: Updating the log level of kafka.network.Processor to FATAL (kafka.server.ZkAdminManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:23,542 INFO [Admin Manager on Broker 2]: Updating the log level of kafka.server.KafkaApis to FATAL (kafka.server.ZkAdminManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:23,572 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@23a6d9c0, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,577 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@7057841f, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,583 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@1b29cf2d, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,588 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@2ddf203c, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,595 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@38a2949e, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,600 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@741998e9, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,604 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@211c71e0, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,610 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@75167b3f, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,614 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@593c1767, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,619 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@61da1279, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,623 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@230bfcd3, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,628 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@6502b40e, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,632 INFO Reconfiguring org.apache.kafka.common.network.SslChannelBuilder@5c3c00e6, updated configs: Set() custom configs: {} (kafka.server.DynamicBrokerConfig) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,633 INFO [Admin Manager on Broker 2]: Updating broker 2 with new configuration :  (kafka.server.ZkAdminManager) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:23,751 INFO Processing notification(s) to /config/changes (kafka.common.ZkNodeChangeNotificationListener) [/config/changes-event-process-thread]
2021-08-26 13:34:23,788 INFO Processing override for entityPath: brokers/2 with config: HashMap() (kafka.server.DynamicConfigManager) [/config/changes-event-process-thread]
2021-08-26 13:34:23,790 INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = CONTROLPLANE-9090://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9090,REPLICATION-9091://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091,PLAIN-9092://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9092,TLS-9093://my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9093
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 2
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = REPLICATION-9091
	inter.broker.protocol.version = 2.8
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = CONTROLPLANE-9090:SSL,REPLICATION-9091:SSL,PLAIN-9092:PLAINTEXT,TLS-9093:SSL
	listeners = CONTROLPLANE-9090://0.0.0.0:9090,REPLICATION-9091://0.0.0.0:9091,PLAIN-9092://0.0.0.0:9092,TLS-9093://0.0.0.0:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data/kafka-log2
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.8
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	node.id = -1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = []
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = HTTPS
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = SHA1PRNG
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = org.apache.zookeeper.ClientCnxnSocketNetty
	zookeeper.connect = my-cluster-zookeeper-client:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = true
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = /tmp/kafka/cluster.keystore.p12
	zookeeper.ssl.keystore.password = [hidden]
	zookeeper.ssl.keystore.type = PKCS12
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = /tmp/kafka/cluster.truststore.p12
	zookeeper.ssl.truststore.password = [hidden]
	zookeeper.ssl.truststore.type = PKCS12
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig) [/config/changes-event-process-thread]
2021-08-26 13:34:40,620 INFO Creating topic __strimzi_store_topic with configuration {min.insync.replicas=2} and initial partition assignment HashMap(0 -> ArrayBuffer(1, 0, 2)) (kafka.zk.AdminZkClient) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:40,839 INFO [Controller id=2] New topics: [Set(__strimzi_store_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__strimzi_store_topic,Some(LWUHnGztTpidEA791chWMw),Map(__strimzi_store_topic-0 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:40,841 INFO [Controller id=2] New partition creation callback for __strimzi_store_topic-0 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:40,845 INFO [Controller id=2 epoch=1] Changed partition __strimzi_store_topic-0 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,845 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,852 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __strimzi_store_topic-0 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,852 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __strimzi_store_topic-0 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,852 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __strimzi_store_topic-0 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,852 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,939 INFO [Controller id=2 epoch=1] Changed partition __strimzi_store_topic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,942 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__strimzi_store_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __strimzi_store_topic-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,944 INFO [Controller id=2 epoch=1] Sending LeaderAndIsr request to broker 0 with 0 become-leader and 1 become-follower partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,947 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__strimzi_store_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __strimzi_store_topic-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,948 INFO [Controller id=2 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,948 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__strimzi_store_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __strimzi_store_topic-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,948 INFO [Controller id=2 epoch=1] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,948 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 1 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,950 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __strimzi_store_topic-0 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,950 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __strimzi_store_topic-0 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,950 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __strimzi_store_topic-0 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,950 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:40,954 INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 for 1 partitions (state.change.logger) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:40,955 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__strimzi_store_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:40,982 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 epoch 1 starting the become-follower transition for partition __strimzi_store_topic-0 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,100 INFO [Log partition=__strimzi_store_topic-0, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,110 INFO Created log for partition __strimzi_store_topic-0 in /var/lib/kafka/data/kafka-log2/__strimzi_store_topic-0 with properties {compression.type -> producer, min.insync.replicas -> 2, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,116 INFO [Partition __strimzi_store_topic-0 broker=2] No checkpointed highwatermark is found for partition __strimzi_store_topic-0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,117 INFO [Partition __strimzi_store_topic-0 broker=2] Log loaded for partition __strimzi_store_topic-0 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,118 INFO [Broker id=2] Follower __strimzi_store_topic-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,120 INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions HashSet(__strimzi_store_topic-0) (kafka.server.ReplicaFetcherManager) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,121 INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 3 for 1 partitions (state.change.logger) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,167 TRACE [Controller id=2 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=LWUHnGztTpidEA791chWMw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 1 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:34:41,180 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 2 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:34:41,239 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:41,243 INFO [ReplicaFetcherManager on broker 2] Added fetcher to broker 1 for partitions Map(__strimzi_store_topic-0 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0)) (kafka.server.ReplicaFetcherManager) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,246 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 3 from controller 2 epoch 1 for the become-follower transition for partition __strimzi_store_topic-0 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,246 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __strimzi_store_topic-0 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:41,248 INFO [Log partition=__strimzi_store_topic-0, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:41,265 INFO [Broker id=2] Finished LeaderAndIsr request in 312ms correlationId 3 from controller 2 for 1 partitions (state.change.logger) [data-plane-kafka-request-handler-0]
2021-08-26 13:34:41,270 TRACE [Controller id=2 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=LWUHnGztTpidEA791chWMw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 3 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:34:41,277 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__strimzi_store_topic', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __strimzi_store_topic-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 4 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:41,278 INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 4 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:41,286 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 4 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:34:41,397 TRACE [Controller id=2 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=LWUHnGztTpidEA791chWMw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 2 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:34:41,415 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 3 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:34:42,636 INFO Creating topic __consumer_offsets with configuration {compression.type=producer, cleanup.policy=compact, segment.bytes=104857600} and initial partition assignment HashMap(0 -> ArrayBuffer(1, 2, 0), 1 -> ArrayBuffer(0, 1, 2), 2 -> ArrayBuffer(2, 0, 1), 3 -> ArrayBuffer(1, 0, 2), 4 -> ArrayBuffer(0, 2, 1), 5 -> ArrayBuffer(2, 1, 0), 6 -> ArrayBuffer(1, 2, 0), 7 -> ArrayBuffer(0, 1, 2), 8 -> ArrayBuffer(2, 0, 1), 9 -> ArrayBuffer(1, 0, 2), 10 -> ArrayBuffer(0, 2, 1), 11 -> ArrayBuffer(2, 1, 0), 12 -> ArrayBuffer(1, 2, 0), 13 -> ArrayBuffer(0, 1, 2), 14 -> ArrayBuffer(2, 0, 1), 15 -> ArrayBuffer(1, 0, 2), 16 -> ArrayBuffer(0, 2, 1), 17 -> ArrayBuffer(2, 1, 0), 18 -> ArrayBuffer(1, 2, 0), 19 -> ArrayBuffer(0, 1, 2), 20 -> ArrayBuffer(2, 0, 1), 21 -> ArrayBuffer(1, 0, 2), 22 -> ArrayBuffer(0, 2, 1), 23 -> ArrayBuffer(2, 1, 0), 24 -> ArrayBuffer(1, 2, 0), 25 -> ArrayBuffer(0, 1, 2), 26 -> ArrayBuffer(2, 0, 1), 27 -> ArrayBuffer(1, 0, 2), 28 -> ArrayBuffer(0, 2, 1), 29 -> ArrayBuffer(2, 1, 0), 30 -> ArrayBuffer(1, 2, 0), 31 -> ArrayBuffer(0, 1, 2), 32 -> ArrayBuffer(2, 0, 1), 33 -> ArrayBuffer(1, 0, 2), 34 -> ArrayBuffer(0, 2, 1), 35 -> ArrayBuffer(2, 1, 0), 36 -> ArrayBuffer(1, 2, 0), 37 -> ArrayBuffer(0, 1, 2), 38 -> ArrayBuffer(2, 0, 1), 39 -> ArrayBuffer(1, 0, 2), 40 -> ArrayBuffer(0, 2, 1), 41 -> ArrayBuffer(2, 1, 0), 42 -> ArrayBuffer(1, 2, 0), 43 -> ArrayBuffer(0, 1, 2), 44 -> ArrayBuffer(2, 0, 1), 45 -> ArrayBuffer(1, 0, 2), 46 -> ArrayBuffer(0, 2, 1), 47 -> ArrayBuffer(2, 1, 0), 48 -> ArrayBuffer(1, 2, 0), 49 -> ArrayBuffer(0, 1, 2)) (kafka.zk.AdminZkClient) [data-plane-kafka-request-handler-4]
2021-08-26 13:34:42,894 INFO [Controller id=2] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(uNMh2UqhTm6WLpTH_DSDWA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:42,894 INFO [Controller id=2] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:42,898 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 0,2,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,909 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,909 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 2,1,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 2,0,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 2,0,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 0,2,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 0,2,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 2,1,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 2,1,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,910 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 2,1,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,921 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 0,2,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,921 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 0,2,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,921 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 2,1,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 2,1,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 2,0,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 2,0,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 2,0,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,922 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 2,0,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 1,2,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 1,0,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 0,1,2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 2,1,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 2,0,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 2,1,0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 0,2,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 0,2,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 2,0,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 0,2,1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,923 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-46 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-12 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-1 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-47 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-5 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-28 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-11 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-7 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-6 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-24 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-21 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-27 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-41 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-42 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-4 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-23 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-36 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-20 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-17 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-2 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,926 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-13 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-25 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-15 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-40 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-32 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-38 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-8 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-48 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-18 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-3 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-35 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-22 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-49 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-34 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-9 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-39 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-14 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-44 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-31 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-33 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-45 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-30 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-37 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-19 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-26 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-10 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-43 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-16 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,927 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-29 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-32 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-18 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-21 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-1 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-14 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-34 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-5 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-16 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-29 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-11 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-44 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-22 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-47 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-36 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-28 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-42 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-9 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-48 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-46 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-37 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-13 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-30 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,928 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-35 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-39 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-12 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-27 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-45 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-19 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-20 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-49 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-40 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-38 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-41 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-8 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-7 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-43 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-24 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-33 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-25 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-31 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-23 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-10 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-6 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-2 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-17 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-4 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-15 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-26 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,929 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-3 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-21 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-43 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-23 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-26 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-35 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-20 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-4 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-7 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-22 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-38 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-1 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-2 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-42 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-3 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-28 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-46 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-15 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-16 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-47 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-48 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-5 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-31 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-41 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-18 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-13 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-27 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,930 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-33 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-36 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-40 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-37 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-30 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-34 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-9 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-29 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-44 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-24 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-19 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-39 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-32 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-10 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-49 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-17 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-25 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-11 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-6 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-8 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-14 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-12 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-45 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:42,931 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 2, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 2, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 2, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,538 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 2, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 2, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 0, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 1, 2), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,539 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 2, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 2, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 0, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 INFO [Controller id=2 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0, 2, 1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-13 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-46 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-9 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-42 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-21 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-17 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-30 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-26 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-5 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-38 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-34 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-16 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-45 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-12 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,540 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-41 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-24 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-20 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-49 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-29 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-25 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-8 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-37 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-4 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-33 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-15 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-48 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-11 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-44 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-23 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-19 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-32 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-28 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-7 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-40 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-3 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-36 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,541 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-47 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-14 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-43 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-10 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-22 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-18 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-31 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-27 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-39 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-6 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-35 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __consumer_offsets-2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,542 INFO [Controller id=2 epoch=1] Sending LeaderAndIsr request to broker 0 with 17 become-leader and 33 become-follower partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-13 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-46 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-9 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-42 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-21 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-17 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-30 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-26 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-5 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-38 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-34 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-16 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-45 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-12 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,543 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-41 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-24 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-20 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-49 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-29 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-25 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-8 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-37 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-4 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-33 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-15 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-48 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-11 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-44 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-23 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-19 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-32 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-28 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-7 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,544 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-40 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-3 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-36 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-47 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-14 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-43 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-10 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-22 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-18 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-31 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-27 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-39 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-6 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-35 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,545 INFO [Controller id=2 epoch=1] Sending LeaderAndIsr request to broker 1 with 17 become-leader and 33 become-follower partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-13 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-46 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-9 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-42 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-21 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-17 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-30 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-26 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-5 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-38 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-1 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-34 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-16 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-45 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-12 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-41 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-24 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-20 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-49 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-29 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-25 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-8 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-37 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-4 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-33 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-15 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-48 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,546 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-11 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-44 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-23 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-19 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-32 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-28 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-7 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-40 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-3 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-36 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-47 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-14 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-43 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-10 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-22 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-18 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-31 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-27 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-39 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-6 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-35 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-2 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,547 INFO [Controller id=2 epoch=1] Sending LeaderAndIsr request to broker 2 with 16 become-leader and 34 become-follower partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,548 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 50 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,551 INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 for 50 partitions (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-46 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-12 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-1 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-47 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-5 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-28 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-11 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-7 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-6 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-24 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-21 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,552 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-27 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-41 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-42 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-4 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-23 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-36 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-20 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-17 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-2 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-13 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-25 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-15 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-40 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-32 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-38 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-8 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-48 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-18 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-3 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-35 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-22 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-49 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-34 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-9 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-39 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-14 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-44 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-31 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,553 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-33 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-45 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-30 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-37 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-19 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-26 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-10 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-43 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-16 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __consumer_offsets-29 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,554 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-32 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-18 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-21 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-1 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-14 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-34 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-5 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-16 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-29 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-11 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-44 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-22 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-47 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Broker id=2] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 2 epoch 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-36 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-28 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-42 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-9 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-48 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-46 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-37 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-13 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-30 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-35 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-39 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-12 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,555 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-27 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-45 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-19 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-20 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-49 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-40 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-38 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-41 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-8 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-7 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-43 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-24 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-33 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-25 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-31 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-23 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-10 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-6 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-2 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-17 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-4 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-15 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-26 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition __consumer_offsets-3 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-21 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-43 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-23 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-26 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-35 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-20 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-4 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-7 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-22 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-38 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-1 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-2 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-42 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-3 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-28 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-46 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-15 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-16 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-47 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,556 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-48 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-5 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-31 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-41 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-18 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-13 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-27 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-33 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-36 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-40 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-37 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-30 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-34 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-9 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-29 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-44 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-24 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-19 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-39 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-32 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-10 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-49 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-17 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-25 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-11 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-6 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-8 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-14 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-12 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 TRACE [Controller id=2 epoch=1] Changed state of replica 2 for partition __consumer_offsets-45 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,557 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,588 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,591 INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions HashSet(__consumer_offsets-8, __consumer_offsets-35, __consumer_offsets-47, __consumer_offsets-38, __consumer_offsets-17, __consumer_offsets-11, __consumer_offsets-29, __consumer_offsets-32, __consumer_offsets-41, __consumer_offsets-23, __consumer_offsets-2, __consumer_offsets-14, __consumer_offsets-20, __consumer_offsets-44, __consumer_offsets-5, __consumer_offsets-26) (kafka.server.ReplicaFetcherManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,593 INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 2 epoch 1 as part of the become-leader transition for 16 partitions (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,623 INFO [Log partition=__consumer_offsets-35, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,624 INFO Created log for partition __consumer_offsets-35 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-35 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,624 INFO [Partition __consumer_offsets-35 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-35 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,625 INFO [Partition __consumer_offsets-35 broker=2] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,629 INFO [Broker id=2] Leader __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,1,0] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,684 INFO [Log partition=__consumer_offsets-5, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,685 INFO Created log for partition __consumer_offsets-5 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-5 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,685 INFO [Partition __consumer_offsets-5 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-5 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,686 INFO [Partition __consumer_offsets-5 broker=2] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,686 INFO [Broker id=2] Leader __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,1,0] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,703 INFO [Log partition=__consumer_offsets-20, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,704 INFO Created log for partition __consumer_offsets-20 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-20 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,705 INFO [Partition __consumer_offsets-20 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-20 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,705 INFO [Partition __consumer_offsets-20 broker=2] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,705 INFO [Broker id=2] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,0,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,726 INFO [Log partition=__consumer_offsets-41, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,727 INFO Created log for partition __consumer_offsets-41 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-41 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,727 INFO [Partition __consumer_offsets-41 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-41 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,727 INFO [Partition __consumer_offsets-41 broker=2] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,727 INFO [Broker id=2] Leader __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,1,0] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,760 INFO [Log partition=__consumer_offsets-29, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,761 INFO Created log for partition __consumer_offsets-29 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-29 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,761 INFO [Partition __consumer_offsets-29 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-29 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,761 INFO [Partition __consumer_offsets-29 broker=2] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,761 INFO [Broker id=2] Leader __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,1,0] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,788 INFO [Log partition=__consumer_offsets-44, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,789 INFO Created log for partition __consumer_offsets-44 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-44 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,789 INFO [Partition __consumer_offsets-44 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-44 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,789 INFO [Partition __consumer_offsets-44 broker=2] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,789 INFO [Broker id=2] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,0,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,834 INFO [Log partition=__consumer_offsets-14, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,835 INFO Created log for partition __consumer_offsets-14 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-14 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,835 INFO [Partition __consumer_offsets-14 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-14 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,835 INFO [Partition __consumer_offsets-14 broker=2] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,835 INFO [Broker id=2] Leader __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,0,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,882 INFO [Log partition=__consumer_offsets-2, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,883 INFO Created log for partition __consumer_offsets-2 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-2 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,883 INFO [Partition __consumer_offsets-2 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-2 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,883 INFO [Partition __consumer_offsets-2 broker=2] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,883 INFO [Broker id=2] Leader __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,0,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,915 INFO [Log partition=__consumer_offsets-23, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,916 INFO Created log for partition __consumer_offsets-23 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-23 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,916 INFO [Partition __consumer_offsets-23 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,916 INFO [Partition __consumer_offsets-23 broker=2] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,916 INFO [Broker id=2] Leader __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,1,0] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,930 INFO [Log partition=__consumer_offsets-38, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,931 INFO Created log for partition __consumer_offsets-38 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-38 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,931 INFO [Partition __consumer_offsets-38 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-38 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,931 INFO [Partition __consumer_offsets-38 broker=2] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,931 INFO [Broker id=2] Leader __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,0,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,968 INFO [Log partition=__consumer_offsets-8, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,969 INFO Created log for partition __consumer_offsets-8 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-8 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,969 INFO [Partition __consumer_offsets-8 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-8 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,969 INFO [Partition __consumer_offsets-8 broker=2] Log loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:43,969 INFO [Broker id=2] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,0,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,007 INFO [Log partition=__consumer_offsets-11, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,008 INFO Created log for partition __consumer_offsets-11 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-11 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,008 INFO [Partition __consumer_offsets-11 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-11 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,008 INFO [Partition __consumer_offsets-11 broker=2] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,009 INFO [Broker id=2] Leader __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,1,0] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,039 INFO [Log partition=__consumer_offsets-26, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,040 INFO Created log for partition __consumer_offsets-26 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-26 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,040 INFO [Partition __consumer_offsets-26 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-26 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,040 INFO [Partition __consumer_offsets-26 broker=2] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,040 INFO [Broker id=2] Leader __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,0,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,059 INFO [Log partition=__consumer_offsets-47, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,060 INFO Created log for partition __consumer_offsets-47 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-47 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,060 INFO [Partition __consumer_offsets-47 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-47 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,060 INFO [Partition __consumer_offsets-47 broker=2] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,060 INFO [Broker id=2] Leader __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,1,0] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,089 INFO [Log partition=__consumer_offsets-17, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,089 INFO Created log for partition __consumer_offsets-17 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-17 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,090 INFO [Partition __consumer_offsets-17 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,090 INFO [Partition __consumer_offsets-17 broker=2] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,090 INFO [Broker id=2] Leader __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,1,0] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,124 INFO [Log partition=__consumer_offsets-32, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,125 INFO Created log for partition __consumer_offsets-32 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-32 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,125 INFO [Partition __consumer_offsets-32 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-32 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,125 INFO [Partition __consumer_offsets-32 broker=2] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,125 INFO [Broker id=2] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [2,0,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,138 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-3 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-18 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-37 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-7 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-22 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-10 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-33 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-48 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-19 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-34 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-4 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-45 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-15 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-30 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-49 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-0 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-39 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-9 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-24 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-27 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-42 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-12 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-31 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-46 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-1 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-16 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-21 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-36 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-6 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-25 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-40 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-43 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-13 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,139 TRACE [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-28 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,151 INFO [Log partition=__consumer_offsets-3, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,152 INFO Created log for partition __consumer_offsets-3 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-3 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,152 INFO [Partition __consumer_offsets-3 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-3 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,152 INFO [Partition __consumer_offsets-3 broker=2] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,152 INFO [Broker id=2] Follower __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,164 INFO [Log partition=__consumer_offsets-18, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,165 INFO Created log for partition __consumer_offsets-18 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-18 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,165 INFO [Partition __consumer_offsets-18 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-18 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,165 INFO [Partition __consumer_offsets-18 broker=2] Log loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,165 INFO [Broker id=2] Follower __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,179 INFO [Log partition=__consumer_offsets-37, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,180 INFO Created log for partition __consumer_offsets-37 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-37 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,180 INFO [Partition __consumer_offsets-37 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-37 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,180 INFO [Partition __consumer_offsets-37 broker=2] Log loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,180 INFO [Broker id=2] Follower __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,190 INFO [Log partition=__consumer_offsets-7, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,191 INFO Created log for partition __consumer_offsets-7 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-7 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,191 INFO [Partition __consumer_offsets-7 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-7 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,191 INFO [Partition __consumer_offsets-7 broker=2] Log loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,191 INFO [Broker id=2] Follower __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,201 INFO [Log partition=__consumer_offsets-22, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,202 INFO Created log for partition __consumer_offsets-22 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-22 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,202 INFO [Partition __consumer_offsets-22 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-22 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,202 INFO [Partition __consumer_offsets-22 broker=2] Log loaded for partition __consumer_offsets-22 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,202 INFO [Broker id=2] Follower __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,215 INFO [Log partition=__consumer_offsets-10, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,216 INFO Created log for partition __consumer_offsets-10 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-10 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,216 INFO [Partition __consumer_offsets-10 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-10 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,216 INFO [Partition __consumer_offsets-10 broker=2] Log loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,216 INFO [Broker id=2] Follower __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,228 INFO [Log partition=__consumer_offsets-33, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,229 INFO Created log for partition __consumer_offsets-33 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-33 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,229 INFO [Partition __consumer_offsets-33 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-33 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,229 INFO [Partition __consumer_offsets-33 broker=2] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,229 INFO [Broker id=2] Follower __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,242 INFO [Log partition=__consumer_offsets-48, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,243 INFO Created log for partition __consumer_offsets-48 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-48 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,243 INFO [Partition __consumer_offsets-48 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-48 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,243 INFO [Partition __consumer_offsets-48 broker=2] Log loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,243 INFO [Broker id=2] Follower __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,257 INFO [Log partition=__consumer_offsets-19, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,258 INFO Created log for partition __consumer_offsets-19 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-19 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,258 INFO [Partition __consumer_offsets-19 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-19 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,258 INFO [Partition __consumer_offsets-19 broker=2] Log loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,258 INFO [Broker id=2] Follower __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,267 INFO [Log partition=__consumer_offsets-34, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,268 INFO Created log for partition __consumer_offsets-34 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-34 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,268 INFO [Partition __consumer_offsets-34 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-34 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,268 INFO [Partition __consumer_offsets-34 broker=2] Log loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,268 INFO [Broker id=2] Follower __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,282 INFO [Log partition=__consumer_offsets-4, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,283 INFO Created log for partition __consumer_offsets-4 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-4 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,283 INFO [Partition __consumer_offsets-4 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-4 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,283 INFO [Partition __consumer_offsets-4 broker=2] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,283 INFO [Broker id=2] Follower __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,297 INFO [Log partition=__consumer_offsets-45, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,298 INFO Created log for partition __consumer_offsets-45 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-45 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,298 INFO [Partition __consumer_offsets-45 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-45 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,298 INFO [Partition __consumer_offsets-45 broker=2] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,298 INFO [Broker id=2] Follower __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,308 INFO [Log partition=__consumer_offsets-15, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,309 INFO Created log for partition __consumer_offsets-15 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-15 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,309 INFO [Partition __consumer_offsets-15 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-15 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,309 INFO [Partition __consumer_offsets-15 broker=2] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,309 INFO [Broker id=2] Follower __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,319 INFO [Log partition=__consumer_offsets-30, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,320 INFO Created log for partition __consumer_offsets-30 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-30 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,321 INFO [Partition __consumer_offsets-30 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-30 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,321 INFO [Partition __consumer_offsets-30 broker=2] Log loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,321 INFO [Broker id=2] Follower __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,333 INFO [Log partition=__consumer_offsets-49, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,335 INFO Created log for partition __consumer_offsets-49 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-49 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,335 INFO [Partition __consumer_offsets-49 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-49 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,335 INFO [Partition __consumer_offsets-49 broker=2] Log loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,335 INFO [Broker id=2] Follower __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,343 INFO [Log partition=__consumer_offsets-0, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,344 INFO Created log for partition __consumer_offsets-0 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-0 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,344 INFO [Partition __consumer_offsets-0 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,344 INFO [Partition __consumer_offsets-0 broker=2] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,344 INFO [Broker id=2] Follower __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,352 INFO [Log partition=__consumer_offsets-39, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,352 INFO Created log for partition __consumer_offsets-39 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-39 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,352 INFO [Partition __consumer_offsets-39 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-39 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,352 INFO [Partition __consumer_offsets-39 broker=2] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,353 INFO [Broker id=2] Follower __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,360 INFO [Log partition=__consumer_offsets-9, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,361 INFO Created log for partition __consumer_offsets-9 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-9 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,361 INFO [Partition __consumer_offsets-9 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-9 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,361 INFO [Partition __consumer_offsets-9 broker=2] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,361 INFO [Broker id=2] Follower __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,387 INFO [Log partition=__consumer_offsets-24, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,388 INFO Created log for partition __consumer_offsets-24 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-24 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,388 INFO [Partition __consumer_offsets-24 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-24 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,388 INFO [Partition __consumer_offsets-24 broker=2] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,388 INFO [Broker id=2] Follower __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,396 INFO [Log partition=__consumer_offsets-27, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,397 INFO Created log for partition __consumer_offsets-27 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-27 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,397 INFO [Partition __consumer_offsets-27 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-27 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,397 INFO [Partition __consumer_offsets-27 broker=2] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,397 INFO [Broker id=2] Follower __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,406 INFO [Log partition=__consumer_offsets-42, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,407 INFO Created log for partition __consumer_offsets-42 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-42 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,407 INFO [Partition __consumer_offsets-42 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-42 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,407 INFO [Partition __consumer_offsets-42 broker=2] Log loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,407 INFO [Broker id=2] Follower __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,417 INFO [Log partition=__consumer_offsets-12, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,417 INFO Created log for partition __consumer_offsets-12 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-12 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,417 INFO [Partition __consumer_offsets-12 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-12 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,418 INFO [Partition __consumer_offsets-12 broker=2] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,418 INFO [Broker id=2] Follower __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,428 TRACE [Controller id=2 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=uNMh2UqhTm6WLpTH_DSDWA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 3 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:34:44,431 INFO [Log partition=__consumer_offsets-31, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,433 INFO Created log for partition __consumer_offsets-31 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-31 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,433 INFO [Partition __consumer_offsets-31 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-31 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,433 INFO [Partition __consumer_offsets-31 broker=2] Log loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,433 INFO [Broker id=2] Follower __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,444 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 4 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:34:44,457 INFO [Log partition=__consumer_offsets-46, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,458 INFO Created log for partition __consumer_offsets-46 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-46 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,458 INFO [Partition __consumer_offsets-46 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-46 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,458 INFO [Partition __consumer_offsets-46 broker=2] Log loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,458 INFO [Broker id=2] Follower __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,474 INFO [Log partition=__consumer_offsets-1, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,487 INFO Created log for partition __consumer_offsets-1 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-1 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,487 INFO [Partition __consumer_offsets-1 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-1 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,487 INFO [Partition __consumer_offsets-1 broker=2] Log loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,487 INFO [Broker id=2] Follower __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,493 TRACE [Controller id=2 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=uNMh2UqhTm6WLpTH_DSDWA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 4 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:34:44,510 INFO [Log partition=__consumer_offsets-16, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,511 INFO Created log for partition __consumer_offsets-16 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-16 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,511 INFO [Partition __consumer_offsets-16 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-16 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,511 INFO [Partition __consumer_offsets-16 broker=2] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,511 INFO [Broker id=2] Follower __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,513 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 5 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:34:44,534 INFO [Log partition=__consumer_offsets-21, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,535 INFO Created log for partition __consumer_offsets-21 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-21 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,535 INFO [Partition __consumer_offsets-21 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-21 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,535 INFO [Partition __consumer_offsets-21 broker=2] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,536 INFO [Broker id=2] Follower __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,578 INFO [Log partition=__consumer_offsets-36, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,579 INFO Created log for partition __consumer_offsets-36 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-36 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,579 INFO [Partition __consumer_offsets-36 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-36 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,580 INFO [Partition __consumer_offsets-36 broker=2] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,580 INFO [Broker id=2] Follower __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,644 INFO [Log partition=__consumer_offsets-6, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,646 INFO Created log for partition __consumer_offsets-6 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-6 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,646 INFO [Partition __consumer_offsets-6 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-6 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,646 INFO [Partition __consumer_offsets-6 broker=2] Log loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,646 INFO [Broker id=2] Follower __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,661 INFO [Log partition=__consumer_offsets-25, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,662 INFO Created log for partition __consumer_offsets-25 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-25 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,662 INFO [Partition __consumer_offsets-25 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-25 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,662 INFO [Partition __consumer_offsets-25 broker=2] Log loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,662 INFO [Broker id=2] Follower __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,672 INFO [Log partition=__consumer_offsets-40, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,672 INFO Created log for partition __consumer_offsets-40 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-40 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,673 INFO [Partition __consumer_offsets-40 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-40 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,673 INFO [Partition __consumer_offsets-40 broker=2] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,673 INFO [Broker id=2] Follower __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,681 INFO [Log partition=__consumer_offsets-43, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,682 INFO Created log for partition __consumer_offsets-43 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-43 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,682 INFO [Partition __consumer_offsets-43 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-43 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,682 INFO [Partition __consumer_offsets-43 broker=2] Log loaded for partition __consumer_offsets-43 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,682 INFO [Broker id=2] Follower __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,695 INFO [Log partition=__consumer_offsets-13, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,695 INFO Created log for partition __consumer_offsets-13 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-13 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,695 INFO [Partition __consumer_offsets-13 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-13 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,695 INFO [Partition __consumer_offsets-13 broker=2] Log loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,696 INFO [Broker id=2] Follower __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,706 INFO [Log partition=__consumer_offsets-28, dir=/var/lib/kafka/data/kafka-log2] Loading producer state till offset 0 with message format version 2 (kafka.log.Log) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,707 INFO Created log for partition __consumer_offsets-28 in /var/lib/kafka/data/kafka-log2/__consumer_offsets-28 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> compact, flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 104857600, flush.messages -> 9223372036854775807, message.format.version -> 2.8-IV1, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,707 INFO [Partition __consumer_offsets-28 broker=2] No checkpointed highwatermark is found for partition __consumer_offsets-28 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,707 INFO [Partition __consumer_offsets-28 broker=2] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,707 INFO [Broker id=2] Follower __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,708 INFO [ReplicaFetcherManager on broker 2] Removed fetcher for partitions HashSet(__consumer_offsets-15, __consumer_offsets-48, __consumer_offsets-13, __consumer_offsets-46, __consumer_offsets-9, __consumer_offsets-42, __consumer_offsets-21, __consumer_offsets-19, __consumer_offsets-30, __consumer_offsets-28, __consumer_offsets-7, __consumer_offsets-40, __consumer_offsets-3, __consumer_offsets-36, __consumer_offsets-1, __consumer_offsets-34, __consumer_offsets-16, __consumer_offsets-45, __consumer_offsets-43, __consumer_offsets-12, __consumer_offsets-10, __consumer_offsets-24, __consumer_offsets-22, __consumer_offsets-49, __consumer_offsets-18, __consumer_offsets-31, __consumer_offsets-0, __consumer_offsets-27, __consumer_offsets-25, __consumer_offsets-39, __consumer_offsets-37, __consumer_offsets-6, __consumer_offsets-4, __consumer_offsets-33) (kafka.server.ReplicaFetcherManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,708 INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 5 for 34 partitions (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,713 INFO [ReplicaFetcherManager on broker 2] Added fetcher to broker 1 for partitions HashMap(__consumer_offsets-30 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-21 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-33 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-36 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-48 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-6 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-0 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-45 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-27 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-9 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-42 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-3 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-18 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-15 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-24 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-39 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-12 -> InitialFetchState(BrokerEndPoint(id=1, host=my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0)) (kafka.server.ReplicaFetcherManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,805 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,806 INFO [ReplicaFetcherManager on broker 2] Added fetcher to broker 0 for partitions HashMap(__consumer_offsets-22 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-4 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-25 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-49 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-31 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-37 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-19 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-13 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-43 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-1 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-34 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-7 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-46 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-16 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-28 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-10 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0), __consumer_offsets-40 -> InitialFetchState(BrokerEndPoint(id=0, host=my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091),0,0)) (kafka.server.ReplicaFetcherManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,806 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-16 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,806 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-3 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 INFO [Log partition=__consumer_offsets-16, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-18 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-37 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-7 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-22 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-10 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-33 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-48 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-19 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-34 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-4 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-45 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-15 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-30 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-49 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-0 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-39 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-9 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-24 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-27 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,807 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-13 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-42 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-12 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-31 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-46 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 INFO [Log partition=__consumer_offsets-13, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-1 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-16 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-21 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-36 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-6 with leader 1 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-25 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-40 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-43 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-46 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-13 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 TRACE [Broker id=2] Completed LeaderAndIsr request correlationId 5 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-28 with leader 0 (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,808 INFO [Log partition=__consumer_offsets-46, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,809 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-43 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,809 INFO [Log partition=__consumer_offsets-43, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,809 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-10 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,809 INFO [Log partition=__consumer_offsets-10, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,810 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-22 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,810 INFO [Log partition=__consumer_offsets-22, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,810 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-19 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,810 INFO [Log partition=__consumer_offsets-19, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,811 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-49 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,811 INFO [Log partition=__consumer_offsets-49, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,811 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-31 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,811 INFO [Log partition=__consumer_offsets-31, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,812 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-28 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,812 INFO [Log partition=__consumer_offsets-28, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,812 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-25 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,812 INFO [Log partition=__consumer_offsets-25, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,813 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-7 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [Log partition=__consumer_offsets-7, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-40 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [Log partition=__consumer_offsets-40, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-37 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [Log partition=__consumer_offsets-37, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-4 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [Log partition=__consumer_offsets-4, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-1 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [Log partition=__consumer_offsets-1, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [ReplicaFetcher replicaId=2, leaderId=0, fetcherId=0] Truncating partition __consumer_offsets-34 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,814 INFO [Log partition=__consumer_offsets-34, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-0]
2021-08-26 13:34:44,816 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 35 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,817 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,827 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 5 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 20 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-20 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 41 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 29 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 44 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-44 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 14 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 2 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 23 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 38 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 8 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-8 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 11 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 26 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 47 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 17 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupCoordinator 2]: Elected as the group coordinator for partition 32 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,828 INFO [GroupMetadataManager brokerId=2] Scheduling loading of offsets and group metadata from __consumer_offsets-32 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,829 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 3 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,830 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,830 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 18 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,830 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 37 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 7 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 22 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-22 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 10 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-10 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 33 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 48 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-48 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 19 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 34 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-34 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 4 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-4 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 45 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 15 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 30 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 49 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 0 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-0 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 39 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 9 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 24 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-24 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 27 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 42 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 12 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-12 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 31 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 46 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-46 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 1 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 16 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-16 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 21 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 36 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-36 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 6 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,831 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 25 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 40 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-40 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 43 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 13 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupCoordinator 2]: Resigned as the group coordinator for partition 28 (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,834 INFO [GroupMetadataManager brokerId=2] Scheduling unloading of offsets and group metadata from __consumer_offsets-28 (kafka.coordinator.group.GroupMetadataManager) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,835 INFO [Broker id=2] Finished LeaderAndIsr request in 1283ms correlationId 5 from controller 2 for 50 partitions (state.change.logger) [data-plane-kafka-request-handler-6]
2021-08-26 13:34:44,839 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-35 in 21 milliseconds, of which 12 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,840 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-5 in 12 milliseconds, of which 11 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,840 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-20 in 12 milliseconds, of which 12 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,840 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-41 in 12 milliseconds, of which 12 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,841 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-29 in 13 milliseconds, of which 12 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,841 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-44 in 13 milliseconds, of which 13 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,841 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-14 in 13 milliseconds, of which 13 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,841 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-2 in 13 milliseconds, of which 13 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,841 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-23 in 13 milliseconds, of which 13 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,841 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-38 in 13 milliseconds, of which 13 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,842 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-8 in 14 milliseconds, of which 13 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,842 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-11 in 14 milliseconds, of which 14 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,842 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-26 in 14 milliseconds, of which 14 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,842 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-47 in 14 milliseconds, of which 14 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,842 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-17 in 14 milliseconds, of which 14 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,842 INFO [GroupMetadataManager brokerId=2] Finished loading offsets and group metadata from __consumer_offsets-32 in 14 milliseconds, of which 14 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-3. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-18. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-37. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-7. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-22. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-10. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-33. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-48. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,844 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-19. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-34. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-4. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-45. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-15. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-30. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-49. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-0. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-39. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-9. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-24. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-27. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-42. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-12. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-31. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-46. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-1. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-16. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-21. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-36. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-6. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-25. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-40. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-43. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-13. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,845 INFO [GroupMetadataManager brokerId=2] Finished unloading __consumer_offsets-28. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager) [group-metadata-manager-0]
2021-08-26 13:34:44,846 TRACE [Controller id=2 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=uNMh2UqhTm6WLpTH_DSDWA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 5 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,850 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,855 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 2, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1, 2], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0, 2], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,856 INFO [Broker id=2] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 6 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:44,857 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 6 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:34:44,951 INFO [GroupCoordinator 2]: Preparing to rebalance group __strimzi-topic-operator-kstreams in state PreparingRebalance with old generation 0 (__consumer_offsets-44) (reason: Adding new member __strimzi-topic-operator-kstreams-46f34db4-8410-4aa0-8535-884d842c55c4-StreamThread-1-consumer-0a3998a8-4a86-4906-9b7c-0c59028d21ba with group instance id None) (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-2]
2021-08-26 13:34:44,999 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-15 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:44,999 INFO [Log partition=__consumer_offsets-15, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:44,999 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-48 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:44,999 INFO [Log partition=__consumer_offsets-48, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:44,999 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-45 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:44,999 INFO [Log partition=__consumer_offsets-45, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:44,999 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-12 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:44,999 INFO [Log partition=__consumer_offsets-12, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-9 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-9, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-42 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-42, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-24 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-24, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-21 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-21, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-18 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-18, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-0 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-0, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-30 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-30, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-27 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-27, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-39 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-39, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-6 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [Log partition=__consumer_offsets-6, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,000 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-3 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,001 INFO [Log partition=__consumer_offsets-3, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,001 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-36 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,001 INFO [Log partition=__consumer_offsets-36, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,001 INFO [ReplicaFetcher replicaId=2, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-33 to local high watermark 0 (kafka.server.ReplicaFetcherThread) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:45,001 INFO [Log partition=__consumer_offsets-33, dir=/var/lib/kafka/data/kafka-log2] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log) [ReplicaFetcherThread-0-1]
2021-08-26 13:34:47,966 INFO [GroupCoordinator 2]: Stabilized group __strimzi-topic-operator-kstreams generation 1 (__consumer_offsets-44) with 1 members (kafka.coordinator.group.GroupCoordinator) [executor-Rebalance]
2021-08-26 13:34:48,181 INFO Creating topic __strimzi-topic-operator-kstreams-topic-store-changelog with configuration {cleanup.policy=compact, min.compaction.lag.ms=0, message.timestamp.type=CreateTime, segment.bytes=67108864} and initial partition assignment HashMap(0 -> ArrayBuffer(0)) (kafka.zk.AdminZkClient) [data-plane-kafka-request-handler-4]
2021-08-26 13:34:48,267 INFO [Controller id=2] New topics: [Set(__strimzi-topic-operator-kstreams-topic-store-changelog)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__strimzi-topic-operator-kstreams-topic-store-changelog,Some(y69L7w3iSQeTM_qWSGUUxg),Map(__strimzi-topic-operator-kstreams-topic-store-changelog-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:48,267 INFO [Controller id=2] New partition creation callback for __strimzi-topic-operator-kstreams-topic-store-changelog-0 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:34:48,267 INFO [Controller id=2 epoch=1] Changed partition __strimzi-topic-operator-kstreams-topic-store-changelog-0 state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,267 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,268 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __strimzi-topic-operator-kstreams-topic-store-changelog-0 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,268 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,366 INFO [Controller id=2 epoch=1] Changed partition __strimzi-topic-operator-kstreams-topic-store-changelog-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=0, leaderEpoch=0, isr=List(0), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,366 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__strimzi-topic-operator-kstreams-topic-store-changelog', partitionIndex=0, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], addingReplicas=[], removingReplicas=[], isNew=true) to broker 0 for partition __strimzi-topic-operator-kstreams-topic-store-changelog-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,366 INFO [Controller id=2 epoch=1] Sending LeaderAndIsr request to broker 0 with 1 become-leader and 0 become-follower partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,367 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 1 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,368 TRACE [Controller id=2 epoch=1] Changed state of replica 0 for partition __strimzi-topic-operator-kstreams-topic-store-changelog-0 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,368 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:34:48,371 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='__strimzi-topic-operator-kstreams-topic-store-changelog', partitionIndex=0, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]) for partition __strimzi-topic-operator-kstreams-topic-store-changelog-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:48,371 INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:34:48,374 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 5 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:34:48,379 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 7 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:34:48,412 TRACE [Controller id=2 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=y69L7w3iSQeTM_qWSGUUxg, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 6 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:34:48,438 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 7 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:34:48,445 INFO [GroupCoordinator 2]: Assignment received from leader for group __strimzi-topic-operator-kstreams for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-2]
2021-08-26 13:35:59,291 INFO Creating topic my-topic-739037663-237992768 with configuration {min.insync.replicas=1, retention.ms=7200000, segment.bytes=1073741824} and initial partition assignment HashMap(0 -> ArrayBuffer(1)) (kafka.zk.AdminZkClient) [data-plane-kafka-request-handler-2]
2021-08-26 13:35:59,419 INFO [Controller id=2] New topics: [Set(my-topic-739037663-237992768)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(my-topic-739037663-237992768,Some(9CT69vMgSoaQhqi93mP1DQ),Map(my-topic-739037663-237992768-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:35:59,419 INFO [Controller id=2] New partition creation callback for my-topic-739037663-237992768-0 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:35:59,419 INFO [Controller id=2 epoch=1] Changed partition my-topic-739037663-237992768-0 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,419 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,420 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition my-topic-739037663-237992768-0 from NonExistentReplica to NewReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,420 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,580 INFO [Controller id=2 epoch=1] Changed partition my-topic-739037663-237992768-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), zkVersion=0) (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,581 TRACE [Controller id=2 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='my-topic-739037663-237992768', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition my-topic-739037663-237992768-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,581 INFO [Controller id=2 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,581 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 1 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,582 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition my-topic-739037663-237992768-0 from NewReplica to OnlineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,582 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:35:59,584 TRACE [Broker id=2] Cached leader info UpdateMetadataPartitionState(topicName='my-topic-739037663-237992768', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition my-topic-739037663-237992768-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 8 (state.change.logger) [data-plane-kafka-request-handler-7]
2021-08-26 13:35:59,584 INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 8 (state.change.logger) [data-plane-kafka-request-handler-7]
2021-08-26 13:35:59,589 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 8 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:35:59,596 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 8 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:35:59,619 TRACE [Controller id=2 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=9CT69vMgSoaQhqi93mP1DQ, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 6 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:35:59,624 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 7 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:36:00,915 DEBUG [Controller id=2] Delete topics listener fired for topics my-topic-739037663-237992768 to be deleted (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:36:00,915 INFO [Controller id=2] Starting topic deletion for topics my-topic-739037663-237992768 (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:36:00,917 INFO [Topic Deletion Manager 2] Handling deletion for topics my-topic-739037663-237992768 (kafka.controller.TopicDeletionManager) [controller-event-thread]
2021-08-26 13:36:00,919 INFO [Topic Deletion Manager 2] Deletion of topic my-topic-739037663-237992768 (re)started (kafka.controller.TopicDeletionManager) [controller-event-thread]
2021-08-26 13:36:00,921 TRACE [Controller id=2 epoch=1] Changed partition my-topic-739037663-237992768-0 state from OnlinePartition to OfflinePartition (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,921 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,922 TRACE [Controller id=2 epoch=1] Changed partition my-topic-739037663-237992768-0 state from OfflinePartition to NonExistentPartition (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,922 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,923 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet(0, 1, 2) for 1 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,926 TRACE [Broker id=2] Deleted partition my-topic-739037663-237992768-0 from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 9 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:36:00,926 INFO [Broker id=2] Add 0 partitions and deleted 1 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 9 (state.change.logger) [data-plane-kafka-request-handler-3]
2021-08-26 13:36:00,929 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 8 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:36:00,932 INFO [GroupCoordinator 2]: Removed 0 offsets associated with deleted partitions: my-topic-739037663-237992768-0. (kafka.coordinator.group.GroupCoordinator) [data-plane-kafka-request-handler-3]
2021-08-26 13:36:00,932 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 9 sent to broker my-cluster-kafka-0.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 0 rack: null) (state.change.logger) [Controller-2-to-broker-0-send-thread]
2021-08-26 13:36:00,937 TRACE [Controller id=2 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 9 sent to broker my-cluster-kafka-2.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 2 rack: null) (state.change.logger) [Controller-2-to-broker-2-send-thread]
2021-08-26 13:36:00,985 INFO [Controller id=2 epoch=1] Partition my-topic-739037663-237992768-0 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:1) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,985 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition my-topic-739037663-237992768-0 from OnlineReplica to OfflineReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,986 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,990 TRACE [Controller id=2 epoch=1] Sending StopReplica request StopReplicaPartitionState(partitionIndex=0, leaderEpoch=-2, deletePartition=false) to broker 1 for partition my-topic-739037663-237992768-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,991 INFO [Controller id=2 epoch=1] Sending StopReplica request for 1 replicas to broker 1 (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,993 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition my-topic-739037663-237992768-0 from OfflineReplica to ReplicaDeletionStarted (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,994 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,994 TRACE [Controller id=2 epoch=1] Sending StopReplica request StopReplicaPartitionState(partitionIndex=0, leaderEpoch=-2, deletePartition=true) to broker 1 for partition my-topic-739037663-237992768-0 (state.change.logger) [controller-event-thread]
2021-08-26 13:36:00,994 INFO [Controller id=2 epoch=1] Sending StopReplica request for 1 replicas to broker 1 (state.change.logger) [controller-event-thread]
2021-08-26 13:36:01,005 TRACE [Controller id=2 epoch=1] Received response StopReplicaResponseData(errorCode=0, partitionErrors=[StopReplicaPartitionError(topicName='my-topic-739037663-237992768', partitionIndex=0, errorCode=0)]) for request STOP_REPLICA with correlation id 9 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:36:01,028 TRACE [Controller id=2 epoch=1] Received response StopReplicaResponseData(errorCode=0, partitionErrors=[StopReplicaPartitionError(topicName='my-topic-739037663-237992768', partitionIndex=0, errorCode=0)]) for request STOP_REPLICA with correlation id 10 sent to broker my-cluster-kafka-1.my-cluster-kafka-brokers.second-namespace-test.svc:9091 (id: 1 rack: null) (state.change.logger) [Controller-2-to-broker-1-send-thread]
2021-08-26 13:36:01,030 DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(my-topic-739037663-237992768-0 -> NONE) (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:36:01,033 DEBUG [Topic Deletion Manager 2] Deletion successfully completed for replicas [Topic=my-topic-739037663-237992768,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager) [controller-event-thread]
2021-08-26 13:36:01,033 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition my-topic-739037663-237992768-0 from ReplicaDeletionStarted to ReplicaDeletionSuccessful (state.change.logger) [controller-event-thread]
2021-08-26 13:36:01,033 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:36:01,034 INFO [Topic Deletion Manager 2] Handling deletion for topics my-topic-739037663-237992768 (kafka.controller.TopicDeletionManager) [controller-event-thread]
2021-08-26 13:36:01,037 TRACE [Controller id=2 epoch=1] Changed state of replica 1 for partition my-topic-739037663-237992768-0 from ReplicaDeletionSuccessful to NonExistentReplica (state.change.logger) [controller-event-thread]
2021-08-26 13:36:01,037 INFO [Controller id=2 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger) [controller-event-thread]
2021-08-26 13:36:01,249 INFO [Topic Deletion Manager 2] Deletion of topic my-topic-739037663-237992768 successfully completed (kafka.controller.TopicDeletionManager) [controller-event-thread]
2021-08-26 13:36:01,261 INFO [Controller id=2] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController) [controller-event-thread]
2021-08-26 13:36:01,279 DEBUG [Controller id=2] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController) [controller-event-thread]
