apiVersion: v1
items:
- apiVersion: kafka.strimzi.io/v1beta2
  kind: KafkaMirrorMaker
  metadata:
    creationTimestamp: "2021-08-26T13:39:01Z"
    generation: 1
    managedFields:
    - apiVersion: kafka.strimzi.io/v1beta2
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          .: {}
          f:consumer:
            .: {}
            f:bootstrapServers: {}
            f:config:
              .: {}
              f:auto.offset.reset: {}
            f:groupId: {}
          f:include: {}
          f:logging:
            .: {}
            f:loggers:
              .: {}
              f:mirrormaker.root.logger: {}
            f:type: {}
          f:producer:
            .: {}
            f:bootstrapServers: {}
            f:config:
              .: {}
              f:acks: {}
          f:replicas: {}
          f:version: {}
        f:status:
          .: {}
          f:conditions: {}
          f:labelSelector: {}
          f:observedGeneration: {}
          f:replicas: {}
      manager: okhttp
      operation: Update
      time: "2021-08-26T13:40:13Z"
    name: my-cluster
    namespace: second-namespace-test
    resourceVersion: "1885048"
    uid: a029cd11-678d-47cf-827f-5d32b634e3a6
  spec:
    consumer:
      bootstrapServers: my-cluster-kafka-bootstrap:9092
      config:
        auto.offset.reset: earliest
      groupId: my-group
    include: .*
    logging:
      loggers:
        mirrormaker.root.logger: DEBUG
      type: inline
    producer:
      bootstrapServers: my-cluster-target-kafka-bootstrap:9092
      config:
        acks: all
    replicas: 1
    version: 2.8.0
  status:
    conditions:
    - lastTransitionTime: "2021-08-26T13:40:24.054975Z"
      status: "True"
      type: Ready
    labelSelector: strimzi.io/cluster=my-cluster,strimzi.io/name=my-cluster-mirror-maker,strimzi.io/kind=KafkaMirrorMaker
    observedGeneration: 1
    replicas: 1
- apiVersion: kafka.strimzi.io/v1beta2
  kind: KafkaTopic
  metadata:
    creationTimestamp: "2021-08-26T13:38:54Z"
    generation: 1
    labels:
      strimzi.io/cluster: my-cluster-target
    managedFields:
    - apiVersion: kafka.strimzi.io/v1beta2
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:strimzi.io/cluster: {}
        f:spec:
          .: {}
          f:config:
            .: {}
            f:cleanup.policy: {}
            f:compression.type: {}
            f:segment.bytes: {}
          f:partitions: {}
          f:replicas: {}
          f:topicName: {}
        f:status:
          .: {}
          f:conditions: {}
          f:observedGeneration: {}
          f:topicName: {}
      manager: okhttp
      operation: Update
      time: "2021-08-26T13:38:55Z"
    name: consumer-offsets---84e7a678d08f4bd226872e5cdd4eb527fadc1c6a
    namespace: second-namespace-test
    resourceVersion: "1884432"
    uid: 2c105d68-65f9-4844-9e55-16558f2b304e
  spec:
    config:
      cleanup.policy: compact
      compression.type: producer
      segment.bytes: "104857600"
    partitions: 50
    replicas: 1
    topicName: __consumer_offsets
  status:
    conditions:
    - lastTransitionTime: "2021-08-26T13:38:54.019759Z"
      status: "True"
      type: Ready
    observedGeneration: 1
    topicName: __consumer_offsets
- apiVersion: kafka.strimzi.io/v1beta2
  kind: KafkaTopic
  metadata:
    creationTimestamp: "2021-08-26T13:38:54Z"
    generation: 1
    labels:
      strimzi.io/cluster: my-cluster-target
    managedFields:
    - apiVersion: kafka.strimzi.io/v1beta2
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:strimzi.io/cluster: {}
        f:spec:
          .: {}
          f:config:
            .: {}
            f:min.insync.replicas: {}
          f:partitions: {}
          f:replicas: {}
          f:topicName: {}
        f:status:
          .: {}
          f:conditions: {}
          f:observedGeneration: {}
          f:topicName: {}
      manager: okhttp
      operation: Update
      time: "2021-08-26T13:38:55Z"
    name: strimzi-store-topic---effb8e3e057afce1ecf67c3f5d8e4e3ff177fc55
    namespace: second-namespace-test
    resourceVersion: "1884430"
    uid: e9333110-807f-42e1-b26d-dd92bf526dfc
  spec:
    config:
      min.insync.replicas: "1"
    partitions: 1
    replicas: 1
    topicName: __strimzi_store_topic
  status:
    conditions:
    - lastTransitionTime: "2021-08-26T13:38:53.971965Z"
      status: "True"
      type: Ready
    observedGeneration: 1
    topicName: __strimzi_store_topic
- apiVersion: kafka.strimzi.io/v1beta2
  kind: KafkaTopic
  metadata:
    creationTimestamp: "2021-08-26T13:38:54Z"
    generation: 1
    labels:
      strimzi.io/cluster: my-cluster-target
    managedFields:
    - apiVersion: kafka.strimzi.io/v1beta2
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:strimzi.io/cluster: {}
        f:spec:
          .: {}
          f:config:
            .: {}
            f:cleanup.policy: {}
            f:message.timestamp.type: {}
            f:min.compaction.lag.ms: {}
            f:segment.bytes: {}
          f:partitions: {}
          f:replicas: {}
          f:topicName: {}
        f:status:
          .: {}
          f:conditions: {}
          f:observedGeneration: {}
          f:topicName: {}
      manager: okhttp
      operation: Update
      time: "2021-08-26T13:38:55Z"
    name: strimzi-topic-operator-kstreams-topic-store-changelog---b75e702040b99be8a9263134de3507fc0cc4017b
    namespace: second-namespace-test
    resourceVersion: "1884431"
    uid: 2b512ec9-fb26-4b01-bd06-9812d012b025
  spec:
    config:
      cleanup.policy: compact
      message.timestamp.type: CreateTime
      min.compaction.lag.ms: "0"
      segment.bytes: "67108864"
    partitions: 1
    replicas: 1
    topicName: __strimzi-topic-operator-kstreams-topic-store-changelog
  status:
    conditions:
    - lastTransitionTime: "2021-08-26T13:38:54.015132Z"
      status: "True"
      type: Ready
    observedGeneration: 1
    topicName: __strimzi-topic-operator-kstreams-topic-store-changelog
- apiVersion: kafka.strimzi.io/v1beta2
  kind: Kafka
  metadata:
    creationTimestamp: "2021-08-26T13:32:28Z"
    generation: 1
    managedFields:
    - apiVersion: kafka.strimzi.io/v1beta2
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          .: {}
          f:entityOperator:
            .: {}
            f:topicOperator:
              .: {}
              f:logging:
                .: {}
                f:loggers:
                  .: {}
                  f:rootLogger.level: {}
                f:type: {}
              f:watchedNamespace: {}
            f:userOperator:
              .: {}
              f:logging:
                .: {}
                f:loggers:
                  .: {}
                  f:rootLogger.level: {}
                f:type: {}
          f:kafka:
            .: {}
            f:config:
              .: {}
              f:inter.broker.protocol.version: {}
              f:log.message.format.version: {}
              f:offsets.topic.replication.factor: {}
              f:transaction.state.log.min.isr: {}
              f:transaction.state.log.replication.factor: {}
            f:listeners: {}
            f:logging:
              .: {}
              f:loggers:
                .: {}
                f:kafka.root.logger.level: {}
              f:type: {}
            f:replicas: {}
            f:storage:
              .: {}
              f:type: {}
            f:version: {}
          f:zookeeper:
            .: {}
            f:logging:
              .: {}
              f:loggers:
                .: {}
                f:zookeeper.root.logger: {}
              f:type: {}
            f:replicas: {}
            f:storage:
              .: {}
              f:type: {}
        f:status:
          .: {}
          f:clusterId: {}
          f:conditions: {}
          f:listeners: {}
          f:observedGeneration: {}
      manager: okhttp
      operation: Update
      time: "2021-08-26T13:34:57Z"
    name: my-cluster
    namespace: second-namespace-test
    resourceVersion: "1882724"
    uid: 4c54f47f-176d-411b-ab2b-1da3f5ec4086
  spec:
    entityOperator:
      topicOperator:
        logging:
          loggers:
            rootLogger.level: DEBUG
          type: inline
        watchedNamespace: co-namespace-test
      userOperator:
        logging:
          loggers:
            rootLogger.level: DEBUG
          type: inline
    kafka:
      config:
        inter.broker.protocol.version: "2.8"
        log.message.format.version: "2.8"
        offsets.topic.replication.factor: 3
        transaction.state.log.min.isr: 2
        transaction.state.log.replication.factor: 3
      listeners:
      - name: plain
        port: 9092
        tls: false
        type: internal
      - name: tls
        port: 9093
        tls: true
        type: internal
      logging:
        loggers:
          kafka.root.logger.level: DEBUG
        type: inline
      replicas: 3
      storage:
        type: ephemeral
      version: 2.8.0
    zookeeper:
      logging:
        loggers:
          zookeeper.root.logger: DEBUG
        type: inline
      replicas: 3
      storage:
        type: ephemeral
  status:
    clusterId: 0IS5hMaVTVCKw61BQfUL4g
    conditions:
    - lastTransitionTime: "2021-08-26T13:35:08.180Z"
      status: "True"
      type: Ready
    listeners:
    - addresses:
      - host: my-cluster-kafka-bootstrap.second-namespace-test.svc
        port: 9092
      bootstrapServers: my-cluster-kafka-bootstrap.second-namespace-test.svc:9092
      type: plain
    - addresses:
      - host: my-cluster-kafka-bootstrap.second-namespace-test.svc
        port: 9093
      bootstrapServers: my-cluster-kafka-bootstrap.second-namespace-test.svc:9093
      certificates:
      - |
        -----BEGIN CERTIFICATE-----
        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
        -----END CERTIFICATE-----
      type: tls
    observedGeneration: 1
- apiVersion: kafka.strimzi.io/v1beta2
  kind: Kafka
  metadata:
    creationTimestamp: "2021-08-26T13:36:29Z"
    generation: 1
    managedFields:
    - apiVersion: kafka.strimzi.io/v1beta2
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          .: {}
          f:entityOperator:
            .: {}
            f:topicOperator:
              .: {}
              f:logging:
                .: {}
                f:loggers:
                  .: {}
                  f:rootLogger.level: {}
                f:type: {}
            f:userOperator:
              .: {}
              f:logging:
                .: {}
                f:loggers:
                  .: {}
                  f:rootLogger.level: {}
                f:type: {}
          f:kafka:
            .: {}
            f:config:
              .: {}
              f:inter.broker.protocol.version: {}
              f:log.message.format.version: {}
              f:offsets.topic.replication.factor: {}
              f:transaction.state.log.min.isr: {}
              f:transaction.state.log.replication.factor: {}
            f:listeners: {}
            f:logging:
              .: {}
              f:loggers:
                .: {}
                f:kafka.root.logger.level: {}
              f:type: {}
            f:replicas: {}
            f:storage:
              .: {}
              f:type: {}
            f:version: {}
          f:zookeeper:
            .: {}
            f:logging:
              .: {}
              f:loggers:
                .: {}
                f:zookeeper.root.logger: {}
              f:type: {}
            f:replicas: {}
            f:storage:
              .: {}
              f:type: {}
        f:status:
          .: {}
          f:clusterId: {}
          f:conditions: {}
          f:listeners: {}
          f:observedGeneration: {}
      manager: okhttp
      operation: Update
      time: "2021-08-26T13:39:00Z"
    name: my-cluster-target
    namespace: second-namespace-test
    resourceVersion: "1884550"
    uid: 70a31c21-ef2f-4436-8b56-63d533600301
  spec:
    entityOperator:
      topicOperator:
        logging:
          loggers:
            rootLogger.level: DEBUG
          type: inline
      userOperator:
        logging:
          loggers:
            rootLogger.level: DEBUG
          type: inline
    kafka:
      config:
        inter.broker.protocol.version: "2.8"
        log.message.format.version: "2.8"
        offsets.topic.replication.factor: 1
        transaction.state.log.min.isr: 1
        transaction.state.log.replication.factor: 1
      listeners:
      - name: plain
        port: 9092
        tls: false
        type: internal
      - name: tls
        port: 9093
        tls: true
        type: internal
      logging:
        loggers:
          kafka.root.logger.level: DEBUG
        type: inline
      replicas: 1
      storage:
        type: ephemeral
      version: 2.8.0
    zookeeper:
      logging:
        loggers:
          zookeeper.root.logger: DEBUG
        type: inline
      replicas: 1
      storage:
        type: ephemeral
  status:
    clusterId: djg3DMeWQpOfK7GJR-bq5A
    conditions:
    - lastTransitionTime: "2021-08-26T13:37:35.341440Z"
      message: A Kafka cluster with a single replica and ephemeral storage will lose topic messages after any restart or rolling update.
      reason: KafkaStorage
      status: "True"
      type: Warning
    - lastTransitionTime: "2021-08-26T13:37:35.341634Z"
      message: A ZooKeeper cluster with a single replica and ephemeral storage will be in a defective state after any restart or rolling update. It is recommended that a minimum of three replicas are used.
      reason: ZooKeeperStorage
      status: "True"
      type: Warning
    - lastTransitionTime: "2021-08-26T13:39:11.395Z"
      status: "True"
      type: Ready
    listeners:
    - addresses:
      - host: my-cluster-target-kafka-bootstrap.second-namespace-test.svc
        port: 9092
      bootstrapServers: my-cluster-target-kafka-bootstrap.second-namespace-test.svc:9092
      type: plain
    - addresses:
      - host: my-cluster-target-kafka-bootstrap.second-namespace-test.svc
        port: 9093
      bootstrapServers: my-cluster-target-kafka-bootstrap.second-namespace-test.svc:9093
      certificates:
      - |
        -----BEGIN CERTIFICATE-----
        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
        -----END CERTIFICATE-----
      type: tls
    observedGeneration: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
