apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: strimzi-ephemeral
spec:
  kafka:
    listeners:
      - name: plain
        type: internal
        tls: false
        port: 9092
      - name: tls
        type: internal
        tls: true
        port: 9093
    template:
      statefulset:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
      pod:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
        imagePullSecrets:
          - name: some-secret
          - name: some-other-secret
        securityContext:
          runAsUser: 1000001
          runAsGroup: 1000001
          fsGroup: 0
        terminationGracePeriodSeconds: 30
        volumes:
          - name: example-secret
            secret: 
              secretName: secret-name
          - name: example-configmap
            configMap:
              name: config-map-name
          - name: temp
            emptyDir: {}
          - name: example-pvc-volume
            persistentVolumeClaim:
              claimName: myclaim
      kafkaContainer:
        volumeMounts:
          - name: example-secret
            mountPath: /mnt/secret-volume
          - name: example-configmap
            mountPath: /mnt/cm-volume
          - name: temp
            mountPath: /tmp/logs
          - name: example-pvc-volume
            mountPath: "/mnt/data"
      bootstrapService:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
      brokersService:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
      externalBootstrapService:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
      perPodService:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
      externalBootstrapRoute:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
      perPodRoute:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
      podDisruptionBudget:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
        maxUnavailable: 1
  entityOperator:
    topicOperator: {}
    userOperator: {}
    template:
      deployment:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
      pod:
        metadata:
          labels:
            key1: label1
            key2: label2
          annotations:
            key1: label1
            key2: label2
        volumes:
          - name: example-secret
            secret: 
              secretName: secret-name
          - name: example-configmap
            configMap:
              name: config-map-name
          - name: temp
            emptyDir: {}
          - name: example-pvc-volume
            persistentVolumeClaim:
              claimName: example-pvc-volume

